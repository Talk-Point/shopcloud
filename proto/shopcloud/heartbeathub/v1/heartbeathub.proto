// HeartbeatHub API
// The HeartbeatHub API to admistrate the cloud services from Talk-Point

syntax = "proto3";

package proto.shopcloud.heartbeathub.v1;

import "google/protobuf/timestamp.proto";

// Generic
enum Operator {
    OPERATOR_EQUAL_UNSPECIFIED = 0;
    // OPERATOR_NOT_EQUAL = 1;
    OPERATOR_GREATER_THAN = 2;
    OPERATOR_GREATER_THAN_OR_EQUAL = 3;
    OPERATOR_LESS_THAN = 4;
    OPERATOR_LESS_THAN_OR_EQUAL = 5;
    // OPERATOR_IN = 6;
    // OPERATOR_NOT_IN = 7;
    // OPERATOR_LIKE = 8;
    // OPERATOR_NOT_LIKE = 9;
    // OPERATOR_IS_NULL = 10;
    // OPERATOR_IS_NOT_NULL = 11;
    OPERATOR_CONTAINS = 12;
    OPERATOR_ARRAY_CONTAINS = 13;
}

enum Direction {
    DIRECTION_ASC_UNSPECIFIED = 0;
    DIRECTION_DESC = 1;
}

message Check {
    enum Status {
        STATUS_NEW_UNSPECIFIED = 0;
        STATUS_UP = 1;
        STATUS_GRACE = 2;
        STATUS_DOWN = 3;
        STATUS_PAUSED = 4;
    }
    enum Type {
        TYPE_SRE_UNSPECIFIED = 0;
        TYPE_BRE = 1;
    }

    string id = 1;
    string code = 2; // like de.talk-point.heartbeat/project/component/task the uniq key
    Type type = 3;
    string project = 4;
    string component = 5;
    string task = 6;
    string description = 7;
    string hash = 8;
    Status status = 9;
    int32 grace = 10;
    int32 timeout = 11;
    string ping_url = 12;
    repeated string tags = 13;
    google.protobuf.Timestamp last_ping_at = 14;
    google.protobuf.Timestamp created_at = 15;
    google.protobuf.Timestamp updated_at = 16;

}

message Ping {
    enum Type {
        TYPE_SUCCESS_UNSPECIFIED = 0;
        TYPE_START = 1;
    }
    enum Method {
        METHOD_GET_UNSPECIFIED = 0;
        METHOD_POST = 1;
        METHOD_PUT = 2;
        METHOD_DELETE = 3;
        METHOD_PATCH = 4;
        METHOD_OPTIONS = 5;
        METHOD_HEAD = 6;
        METHOD_EMAIL = 7;
    }

    string id = 1;
    string check = 2;
    string check_value = 3;
    Type type = 4;
    Method method = 5;
    string remote_addr = 6;
    string user_agent = 7;
    google.protobuf.Timestamp ttl = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
}

/*
message KPIRule {
    message TimeRange {
        int32 start_hour = 1;  // Startstunde (0-23)
        int32 end_hour = 2;    // Endstunde (0-23)
    }
    string id = 1;
    string kpi_group = 2;           
    double min_threshold = 3;             // Minimaler Grenzwert
    double max_threshold = 4;             // Maximaler Grenzwert
    repeated int32 applicable_days = 5;   // Anwendbare Tage (0 = Sonntag, 1 = Montag, ..., 6 = Samstag)
    optional TimeRange time_tange = 6;    // Optionaler Zeitbereich, in dem die Regel gilt
    string message = 7;                  // Nachricht, die ausgegeben wird, wenn die Regel verletzt wird
}
*/

message KpiGroup {
    enum GroupStatus {
        GROUP_STATUS_NEW_UNSPECIFIED = 0;
        GROUP_STATUS_ACTIVE = 1;
        GROUP_STATUS_INACTIVE = 2;
        GROUP_STATUS_ARCHIVED = 3;
        GROUP_STATUS_ERROR = 4;
        GROUP_STATUS_UNDER_REVIEW = 5;
    }

    string id = 1;
    string name = 2;
    string description = 5;
    repeated string tags = 6;
    string check = 7;
    int32 ttl_entries = 8; // in days
    GroupStatus status = 9;
    string last_entry_id = 10;
    double last_entry_value = 11;
    string last_entry_unit = 12;
    google.protobuf.Timestamp last_entry_at = 13;
    google.protobuf.Timestamp created_at = 14;
    google.protobuf.Timestamp updated_at = 15;
}

message KpiEntry {
    string id = 1;
    string group = 2;
    double value = 3;
    string unit = 4;
    string check = 5;
    string ping = 6;
    google.protobuf.Timestamp ttl = 7;
    google.protobuf.Timestamp created_at = 8;
}

service HeartbeatHubService {
    // Info
    rpc Info(InfoRequest) returns (InfoResponse);

    // Gateways
    rpc Ping(PingRequest) returns (PingResponse);

    // Checks
    rpc GetCheck(GetCheckRequest) returns (GetCheckResponse);
    rpc GetCheckByHash(GetCheckByHashRequest) returns (GetCheckByHashResponse);
    rpc ListChecks(ListChecksRequest) returns (ListChecksResponse);
    rpc CreateCheck(CreateCheckRequest) returns (CreateCheckResponse);
    rpc DeleteCheck(DeleteCheckRequest) returns (DeleteCheckResponse);
    rpc UpdateCheckPeriod(UpdateCheckPeriodRequest) returns (UpdateCheckPeriodResponse);
    rpc PauseCheck(PauseCheckRequest) returns (PauseCheckResponse);
    rpc ResumeCheck(ResumeCheckRequest) returns (ResumeCheckResponse);
    rpc CheckStatus(CheckStatusRequest) returns (CheckStatusResponse);
    rpc RunAllChecks(RunAllChecksRequest) returns (RunAllChecksResponse);

    // Pings
    rpc GetPing(GetPingRequest) returns (GetPingResponse);
    rpc ListPings(ListPingsRequest) returns (ListPingsResponse);
    rpc DeletePing(DeletePingRequest) returns (DeletePingResponse);

    // Kpi
    rpc BatchKpi(BatchKpiRequest) returns (BatchKpiResponse);

    // KPIGroup
    rpc GetKpiGroup(GetKpiGroupRequest) returns (GetKpiGroupResponse);
    rpc ListKpiGroups(ListKpiGroupsRequest) returns (ListKpiGroupsResponse);
    rpc CreateKpiGroup(CreateKpiGroupRequest) returns (CreateKpiGroupResponse);
    rpc DeleteKpiGroup(DeleteKpiGroupRequest) returns (DeleteKpiGroupResponse);

    // KPIEntry
    rpc GetKpiEntry(GetKpiEntryRequest) returns (GetKpiEntryResponse);
    rpc ListKpiEntries(ListKpiEntriesRequest) returns (ListKpiEntriesResponse);
    rpc CreateKpiEntry(CreateKpiEntryRequest) returns (CreateKpiEntryResponse);
    rpc DeleteKpiEntry(DeleteKpiEntryRequest) returns (DeleteKpiEntryResponse);
}

message Kpi {
    string name = 1;
    double value = 2;
    string unit = 3;
}

message BatchKpiRequest {
    string check = 1;
    string ping = 2;
    repeated Kpi kpis = 3;
}

message BatchKpiResponse {
    repeated string ids = 1;
}

message CreateKpiEntryRequest {
    string group = 1;
    double value = 2;
    string unit = 3;
}

message CreateKpiEntryResponse {
    KpiEntry entry = 1;
}

message DeleteKpiEntryRequest {
    string id = 1;
}

message DeleteKpiEntryResponse {
    KpiEntry entry = 1;
}

message ListKpiEntriesFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_GROUP = 1;
        FIELD_VALUE = 2;
        FIELD_CHECK = 3;
        FIELD_PING = 4;
        FIELD_CREATED_AT = 5;
        FIELD_UPDATED_AT = 6;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListKpiEntriesRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
        ORDER_BY_UPDATED_AT = 2;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListKpiEntriesFilter filters = 6;
}

message ListKpiEntriesResponse {
    repeated KpiEntry entries = 1;
    string page_token = 2;
}

message GetKpiEntryRequest {
    string id = 1;
}

message GetKpiEntryResponse {
    KpiEntry entry = 1;
}

message DeleteKpiGroupRequest {
    string id = 1;
}

message DeleteKpiGroupResponse {
    KpiGroup kpi_group = 1;
}

message CreateKpiGroupRequest {
    string name = 1;
    string description = 2;
    repeated string tags = 3;
    string check = 4;
    int32 ttl_for_entries_in_days = 5;
}

message CreateKpiGroupResponse {
    KpiGroup kpi_group = 1;
}

message ListKpiGroupsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_CODE = 1;
        FIELD_TAGS = 2;
        FIELD_CHECK = 3;
        FIELD_STATUS = 4;
        FIELD_CREATED_AT = 5;
        FIELD_UPDATED_AT = 6;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListKpiGroupsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
        ORDER_BY_UPDATED_AT = 2;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListKpiGroupsFilter filters = 6;
}

message ListKpiGroupsResponse {
    repeated KpiGroup groups = 1;
    string page_token = 2;
}

message GetKpiGroupRequest {
    string id = 1;
}

message GetKpiGroupResponse {
    KpiGroup kpi_group = 1;
}

message PauseCheckRequest {
    string id = 1;
}

message PauseCheckResponse {
    Check check = 1;
}

message ResumeCheckRequest {
    string id = 1;
}

message ResumeCheckResponse {
    Check check = 1;
}

message UpdateCheckPeriodRequest {
    string id = 1;
    int32 grace = 2;
    int32 timeout = 3;
}

message UpdateCheckPeriodResponse {
    Check check = 1;
}

message PingCheckRequest {
    string hash = 1;

}

message CheckStatusRequest {
    string id = 1;
}

message CheckStatusResponse {
    Check.Status status = 1;
}

message RunAllChecksRequest {
    int32 page_size = 1;
    string next_page_token = 2;
    bool not_parallel = 3;
}

message CheckStatus {
    string id = 1;
    Check.Status status = 2;
}

message RunAllChecksResponse {
    string next_page_token = 1;
}

message InfoRequest {}

message InfoResponse {
    string version = 1;
}

message PingRequest {
    string hash = 1;
    Ping.Type type = 2;
    Ping.Method method = 3;
}

message PingResponse {
    string id = 1;
}

message GetCheckRequest {
    string id = 1;
}

message GetCheckResponse {
    Check check = 1;
}

message ListChecksFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_CODE = 1;
        FIELD_TYPE = 2;
        FIELD_PROJECT = 3;
        FIELD_COMPONENT = 4;
        FIELD_TASK = 5;
        FIELD_HASH = 6;
        FIELD_STATUS = 7;
        FIELD_TAGS = 8;
        FIELD_CREATED_AT = 9;
        FIELD_UPDATED_AT = 10;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListChecksRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
        ORDER_BY_UPDATED_AT = 2;
        ORDER_BY_LAST_PING_AT = 3;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListChecksFilter filters = 6;
}

message ListChecksResponse {
    repeated Check checks = 1;
    string page_token = 2;
}

message GetCheckByHashRequest {
    string hash = 1;
}

message GetCheckByHashResponse {
    Check check = 1;
}

message CreateCheckRequest {
    Check.Type type = 1;
    string project = 2;
    string component = 3;
    string task = 4;
    string description = 5;
    int32 grace = 6;
    int32 timeout = 7;
}

message CreateCheckResponse {
    Check check = 1;
}

message DeleteCheckRequest {
    string id = 1;
}

message DeleteCheckResponse {
    Check check = 1;
}

message GetPingRequest {
    string id = 1;
}

message GetPingResponse {
    Ping ping = 1;
}

message ListPingsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_CHECK = 1;
        FIELD_TYPE = 2;
        FIELD_CREATED_AT = 3;
        FIELD_UPDATED_AT = 4;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListPingsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
        ORDER_BY_UPDATED_AT = 2;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListPingsFilter filters = 6;
}

message ListPingsResponse {
    repeated Ping pings = 1;
    string page_token = 2;
}

message DeletePingRequest {
    string id = 1;
}

message DeletePingResponse {
    Ping ping = 1;
}