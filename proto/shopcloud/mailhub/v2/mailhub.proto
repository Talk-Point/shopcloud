// MailHub API
// THe MailHub API, can send Mails etc.

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

package proto.shopcloud.mailhub.v2;

// Generic
enum Operator {
    OPERATOR_EQUAL_UNSPECIFIED = 0;
    // OPERATOR_NOT_EQUAL = 1;
    OPERATOR_GREATER_THAN = 2;
    OPERATOR_GREATER_THAN_OR_EQUAL = 3;
    OPERATOR_LESS_THAN = 4;
    OPERATOR_LESS_THAN_OR_EQUAL = 5;
    // OPERATOR_IN = 6;
    // OPERATOR_NOT_IN = 7;
    // OPERATOR_LIKE = 8;
    // OPERATOR_NOT_LIKE = 9;
    // OPERATOR_IS_NULL = 10;
    // OPERATOR_IS_NOT_NULL = 11;
    OPERATOR_CONTAINS = 12;
    OPERATOR_ARRAY_CONTAINS = 13;
}

enum Direction {
    DIRECTION_ASC_UNSPECIFIED = 0;
    DIRECTION_DESC = 1;
}

// Domain
message Domain {
    enum Type {
        TYPE_MAILGUN_EU_UNSPECIFIED = 0;
        TYPE_MAILGUN_US = 1;
    }

    string id = 1;
    string environment = 2;
    Type type = 3;
    string name = 4;
    string code = 5;
    string host = 6;
    string description = 7;
    bool is_active = 8;
    bool is_paused = 9;
    string auth = 10;
    google.protobuf.Timestamp created_at = 11;
    google.protobuf.Timestamp updated_at = 12;
}

message Message {
    enum ContentType {
        CONTENT_TYPE_TEXT_UNSPECIFIED = 0;
        CONTENT_TYPE_HTML = 1;
        CONTENT_TYPE_EXTERNAL = 2;
    }

    enum Status {
        STATUS_UNSPECIFIED = 0;
        STATUS_NEW = 1;
        STATUS_PENDING = 2;
        STATUS_FAILED_SEND = 3;
        STATUS_FAILED_CONTENT_FETCH = 4;
        STATUS_SENDET = 5;
        STATUS_ACCEPTED = 6;
        STATUS_DELIVERED = 7;
        STATUS_TEMPORARY_FAIL = 8; 
        STATUS_PERMANENT_FAIL = 9;
        STATUS_SPAM = 10;
    }

    string id = 1;
    string environment = 3;
    string domain = 4;
    string domain_value = 5;
    string from = 6;
    repeated string to = 7;
    repeated string cc = 8;
    repeated string bcc = 9;
    string subject = 10;
    string body = 11;
    ContentType content_type = 12;
    bool is_send = 13;
    string send_error = 14;
    google.protobuf.Timestamp send_at = 15;
    string vendor_reference = 16;
    string vendor_status = 17;
    string external_content_src = 18;
    Status status = 19;
    google.protobuf.Timestamp ttl = 20;
    google.protobuf.Timestamp created_at = 21;
    google.protobuf.Timestamp updated_at = 22;
}

service MailHubService {
    // Info
    rpc Info(InfoRequest) returns (InfoResponse);

    // Public Gateways
    rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
    
    // Message
    rpc GetMessage (GetMessageRequest) returns (GetMessageResponse);
    rpc ListMessages (ListMessagesRequest) returns (ListMessagesResponse);
    rpc DeleteMessage (DeleteMessageRequest) returns (DeleteMessageResponse);
    rpc DispatchMessage (DispatchMessageRequest) returns (DispatchMessageResponse);
    rpc FetchExternalContent (FetchExternalContentRequest) returns (FetchExternalContentResponse);
    
    // Domain
    rpc GetDomain (GetDomainRequest) returns (GetDomainResponse);
    rpc ListDomains (ListDomainsRequest) returns (ListDomainsResponse);
    rpc CreateDomain (CreateDomainRequest) returns (CreateDomainResponse);
    rpc DeleteDomain (DeleteDomainRequest) returns (DeleteDomainResponse);
    rpc ActivateDomain (ActivateDomainRequest) returns (ActivateDomainResponse);
    rpc DeactivateDomain (DeactivateDomainRequest) returns (DeactivateDomainResponse);
    rpc PauseDomain (PauseDomainRequest) returns (PauseDomainResponse);
    rpc ResumeDomain (ResumeDomainRequest) returns (ResumeDomainResponse);
    rpc DispatchMessageToService (DispatchMessageToServiceRequest) returns (DispatchMessageToServiceResponse);

    // WebHook
    rpc ReciveMailGunV3Webhook (ReciveMailGunV3WebhookRequest) returns (ReciveMailGunV3WebhookResponse);
}

message ReciveMailGunV3WebhookRequest {
    google.protobuf.Struct payload = 1;
    string event = 2; // optional can also per Header X-Event-Id
    string topic = 3; // optional can also per Header X-Event-Topic
}

message ReciveMailGunV3WebhookResponse {
    string id = 1;
}

message FetchExternalContentRequest {
    string id = 1;
}

message FetchExternalContentResponse {
    Message message = 1;
}

message InfoRequest {}

message InfoResponse {
    string version = 1;
}

message DispatchMessageToServiceRequest {
    string domain = 1;
    string message = 2;
}

message DispatchMessageToServiceResponse {
    bool is_success = 1;
}

message GetMessageRequest {
    string id = 1;
}

message GetMessageResponse {
    Message message = 1;
}

message DeleteMessageRequest {
    string id = 1;
}

message DeleteMessageResponse {
    Message message = 1;
}

message ListMessagesFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_DOMAIN = 1;
        FIELD_VENDOR_REFERENCE = 2;
        FIELD_CREATED_AT = 3;
        FIELD_UPDATED_AT = 4;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListMessagesRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_DOMAIN = 1;
        ORDER_BY_CREATED_AT = 2;
        ORDER_BY_UPDATED_AT = 3;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListMessagesFilter filters = 6;
}

message ListMessagesResponse {
    repeated Message messages = 1;
    string page_token = 2;
}

message PlainEmail {
    string from = 1;
    repeated string to = 2;
    repeated string cc = 3;
    repeated string bcc = 4;
    string subject = 5;
    string body = 6;
}

message HtmlEmail {
    string from = 1;
    repeated string to = 2;
    repeated string cc = 3;
    repeated string bcc = 4;
    string subject = 5;
    string body = 6;
}

message ExternalContentEmail {
    string from = 1;
    repeated string to = 2;
    repeated string cc = 3;
    repeated string bcc = 4;
    string subject = 5;
    string body = 6;
    string src = 7;
}

message SendMessageRequest {    
    oneof email_type {
        PlainEmail plain_email = 1;
        HtmlEmail html_mail = 2;
        ExternalContentEmail external_content_mail = 3;
    }
}

message SendMessageResponse {
    string id = 1;
}

message DispatchMessageRequest {
    string id = 1;
}

message DispatchMessageResponse {
    bool is_success = 1;
}

message GetDomainRequest {
    string id = 1;
}

message GetDomainResponse {
    Domain domain = 1;
}

message ListDomainFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_HOST = 1;
        FIELD_IS_ACTIVE = 2;
        FIELD_IS_PAUSED = 4;
        FIELD_CREATED_AT = 5;
        FIELD_UPDATED_AT = 6;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListDomainsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_NAME = 1;
        ORDER_BY_CREATED_AT = 2;
        ORDER_BY_UPDATED_AT = 3;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListDomainFilter filters = 6;
}

message ListDomainsResponse {
    repeated Domain domains = 1;
    string page_token = 2;
}

message CreateDomainRequest {
    string name = 1;
    string host = 2;
    string description = 3;
    string auth = 4;
    Domain.Type type = 5;
}

message CreateDomainResponse {
    string id = 1;
}

message DeleteDomainRequest {
    string id = 1;
}

message DeleteDomainResponse {
    Domain domain = 1;
}

message ActivateDomainRequest {
    string id = 1;
}

message ActivateDomainResponse {
    Domain domain = 1;
}

message DeactivateDomainRequest {
    string id = 1;
}

message DeactivateDomainResponse {
    Domain domain = 1;
}

message PauseDomainRequest {
    string id = 1;
}

message PauseDomainResponse {
    Domain domain = 1;
}

message ResumeDomainRequest {
    string id = 1;
}

message ResumeDomainResponse {
    Domain domain = 1;
}
