// SageHub API
// To access the erp

syntax = "proto3";

package proto.shopcloud.sagehub.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

message CreateMask {
    repeated string paths = 1;
}

message UpdateMask {
    repeated string paths = 1;
}

// Generic
enum Operator {
    OPERATOR_EQUAL_UNSPECIFIED = 0;
    // OPERATOR_NOT_EQUAL = 1;
    OPERATOR_GREATER_THAN = 2;
    OPERATOR_GREATER_THAN_OR_EQUAL = 3;
    OPERATOR_LESS_THAN = 4;
    OPERATOR_LESS_THAN_OR_EQUAL = 5;
    // OPERATOR_IN = 6;
    // OPERATOR_NOT_IN = 7;
    // OPERATOR_LIKE = 8;
    // OPERATOR_NOT_LIKE = 9;
    // OPERATOR_IS_NULL = 10;
    // OPERATOR_IS_NOT_NULL = 11;
    OPERATOR_CONTAINS = 12;
    OPERATOR_ARRAY_CONTAINS = 13;
}

enum Direction {
    DIRECTION_ASC_UNSPECIFIED = 0;
    DIRECTION_DESC = 1;
}

// Scopes
enum Scope {
    SCOPE_UNSPECIFIED = 0;
    SCOPE_READ = 1;
    SCOPE_WRITE = 2;
    SCOPE_ADMIN = 3;
}

// Models
message ActionItem {
    string reference = 1;
    string value = 2;
    string field = 3;
}

message Action {
    enum Type {
        TYPE_ADD_UNSPECIFIED = 0;
        TYPE_UPDATE = 1;
        TYPE_DELETE = 2;
    }

    string id = 1;
    Type type = 2;
    string table = 3;
    repeated ActionItem items = 4;
    string by_user = 5;
    google.protobuf.Timestamp created_at = 6;
}

message ApiKey {
    string id = 1;
    string username = 2;
    string email = 3;
    repeated Scope scopes = 4;
    string secret = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

message LBAmazonItem {
    int64 item_id = 1;
    int32 mandant = 2;
    string artikelnummer = 3;
    int64 auspraegung_id = 4;
    string title = 5;
    string sku = 6;
    string asin = 7;
    string marketplace_id = 8;
    int32 leadtime_to_ship = 9;
}

message Event {
    string id = 1;
    string ressource = 2;
    string reference = 3;
    string topic = 4;
    google.protobuf.Timestamp ttl = 5;
    google.protobuf.Timestamp created_at = 6;
}

message Feed {
    string id = 1;
    string supplier = 2;
    string name = 3;
    string source = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp update_at = 6;

    message HttpSource {
        string url = 1;
    }
    
    message FtpSource {
        string host = 1;
        int32 port = 2;
        string username = 3;
        string password = 4;
        string remote_path = 5;
    }
}

service SageHubService {
    // Info
    rpc Info(InfoRequest) returns (InfoResponse);

    // Actions
    rpc GetAction(GetActionRequest) returns (GetActionResponse);
    rpc ListActions(ListActionsRequest) returns (ListActionsResponse);

    // APIKeys
    rpc GetApiKey(GetApiKeyRequest) returns (GetApiKeyResponse);
    rpc ListApiKeys(ListApiKeysRequest) returns (ListApiKeysResponse);
    rpc CreateApiKey(CreateApiKeyRequest) returns (CreateApiKeyResponse);
    rpc DeleteApiKey(DeleteApiKeyRequest) returns (DeleteApiKeyResponse);
    rpc UpdateScopesByApiKey(UpdateScopesByApiKeyRequest) returns (UpdateScopesByApiKeyResponse);

    // Address
    rpc GetAddress(GetAddressRequest) returns (GetAddressResponse);
    rpc ListAddresses(ListAddressesRequest) returns (ListAddressesResponse);
    rpc CreateAddress(CreateAddressRequest) returns (CreateAddressResponse);
    rpc UpdateAddress(UpdateAddressRequest) returns (UpdateAddressResponse);

    // Events
    rpc GetEvent(GetEventRequest) returns (GetEventResponse);
    rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse);
    rpc PushEvent(PushEventRequest) returns (PushEventResponse);

    // Amazon
    rpc GetAmazonItem(GetAmazonItemRequest) returns (GetAmazonItemResponse);
    rpc ListAmazonItems(ListAmazonItemsRequest) returns (ListAmazonItemsResponse);
    rpc UpdateAmazonItem(UpdateAmazonItemRequest) returns (UpdateAmazonItemResponse);
    rpc UpdateAmazonLeadTimes(UpdateAmazonLeadTimesRequest) returns (UpdateAmazonLeadTimesResponse);

    // Ebay
    rpc GetEbayItem(GetEbayItemRequest) returns (GetEbayItemResponse);
    rpc ListEbayItems(ListEbayItemsRequest) returns (ListEbayItemsResponse);
    rpc UpdateEbayItem(UpdateEbayItemRequest) returns (UpdateEbayItemResponse);
    rpc ReviseEbayItems(ReviseEbayItemsRequest) returns (ReviseEbayItemsResponse);

    // VKBelege
    rpc ListVKBelegs(ListVKBelegsRequest) returns (ListVKBelegsResponse);
    rpc GetVKBelegV2(GetVKBelegV2Request) returns (GetVKBelegV2Response);
    rpc ListVKBelegSalechannels(ListVKBelegSalechannelsRequest) returns (ListVKBelegSalechannelsResponse);
    rpc ListVKBelegVersandarts(ListVKBelegVersandartsRequest) returns (ListVKBelegVersandartsResponse);
    rpc SetVersandOnVKBeleg(SetVersandOnVKBelegRequest) returns (SetVersandOnVKBelegResponse);
    rpc BatchSetVersandOnVKBeleg(BatchSetVersandOnVKBelegRequest) returns (BatchSetVersandOnVKBelegResponse);
    rpc UpdateVKBeleg(UpdateVKBelegRequest) returns (UpdateVKBelegResponse);
    // VKBelegEvents
    rpc FetchNewestVKBelegEvents(FetchNewestVKBelegEventsRequest) returns (FetchNewestVKBelegEventsResponse);
    rpc BatchEmitVKBelegEvents(BatchEmitVKBelegEventsRequest) returns (BatchEmitVKBelegEventsResponse);
    rpc EmitVKBelegEvents(EmitVKBelegEventsRequest) returns (EmitVKBelegEventsResponse);
    rpc GetVKBelegEvent(GetVKBelegEventRequest) returns (GetVKBelegEventResponse);
    rpc ListVKBelegEvents(ListVKBelegEventsRequest) returns (ListVKBelegEventsResponse);
    rpc AddTagToVKBelegEvent(AddTagToVKBelegEventRequest) returns (AddTagToVKBelegEventResponse);
    rpc RemoveTagFromVKBelegEvent(RemoveTagFromVKBelegEventRequest) returns (RemoveTagFromVKBelegEventResponse);
    rpc MarkTagDoneVKBelegEvent(MarkTagDoneVKBelegEventRequest) returns (MarkTagDoneVKBelegEventResponse);
    rpc ClassifyVKBelegEventV1(ClassifyVKBelegEventV1Request) returns (ClassifyVKBelegEventV1Response);
    rpc ListVKBelegClassifiersV1(ListVKBelegClassifiersV1Request) returns (ListVKBelegClassifiersV1Response);
    // VKBelegPulse
    rpc GetVKBelegPulse(GetVKBelegPulseRequest) returns (GetVKBelegPulseResponse);
    rpc ListVKBelegPositionsPulse(ListVKBelegPositionsPulseRequest) returns (ListVKBelegPositionsPulseResponse);
    // Report API
    rpc GetSalechannelReport(GetSalechannelReportRequest) returns (GetSalechannelReportResponse);

    // Feeds
    rpc GetFeed(GetFeedRequest) returns (GetFeedResponse);
    rpc GetFeedByName(GetFeedByNameRequest) returns (GetFeedByNameResponse);
    rpc GetFeedFileContent(GetFeedFileContentRequest) returns (GetFeedFileContentResponse);
    rpc ListFeeds(ListFeedsRequest) returns (ListFeedsResponse);
    rpc ListFeedFiles(ListFeedFilesRequest) returns (ListFeedFilesResponse);
    rpc CreateFeed(CreateFeedRequest) returns (CreateFeedResponse);
    rpc CreateFeedFile(CreateFeedFileRequest) returns (CreateFeedFileResponse);
    rpc DeleteFeed(DeleteFeedRequest) returns (DeleteFeedResponse);
    rpc ParseFeedFileProductContent(ParseFeedFileProductContentRequest) returns (ParseFeedFileProductContentResponse); // only per cli

    // Articles
    rpc ListArticles(ListArticlesRequest) returns (ListArticlesResponse);
    rpc GetArticleCoreData(GetArticleCoreDataRequest) returns (GetArticleCoreDataResponse);
    rpc GetArticleGtin(GetArticleGtinRequest) returns (GetArticleGtinResponse);
    rpc EnableArticle(EnableArticleRequest) returns (EnableArticleResponse);
    rpc DisableArticle(DisableArticleRequest) returns (DisableArticleResponse);
    rpc EnableShopArticle(EnableShopArticleRequest) returns (EnableShopArticleResponse);
    rpc DisableShopArticle(DisableShopArticleRequest) returns (DisableShopArticleResponse);
    rpc SetArticleContentStatus(SetArticleContentStatusRequest) returns (SetArticleContentStatusResponse);
    rpc UpdateArticle(UpdateArticleRequest) returns (UpdateArticleResponse);
    rpc ListArticleRanks(ListArticleRanksRequest) returns (ListArticleRanksResponse);
    rpc ListArticleWarehouseStocks(ListArticleWarehouseStocksRequest) returns (ListArticleWarehouseStocksResponse);
    rpc ListArticleMovements(ListArticleMovementsRequest) returns (ListArticleMovementsResponse);
    rpc ListLastSaleForArticles(ListLastSaleForArticlesRequest) returns (ListLastSaleForArticlesResponse);
    rpc CreateArticle(CreateArticleRequest) returns (CreateArticleResponse);
    rpc CreateContentSnapshot(CreateContentSnapshotRequest) returns (CreateContentSnapshotResponse);
    rpc ListContentSnapshots(ListContentSnapshotsRequest) returns (ListContentSnapshotsResponse);
    rpc ReadContentSnapshot(ReadContentSnapshotRequest) returns (ReadContentSnapshotResponse);
    // Articles Prices
    rpc ListArticlesPriceLists(ListArticlesPriceListsRequest) returns (ListArticlesPriceListsResponse);
    rpc ListArticlePrices(ListArticlePricesRequest) returns (ListArticlePricesResponse);
    rpc GetArticlePrices(GetArticlePricesRequest) returns (GetArticlePricesResponse);
    rpc UpdateArticlePrice(UpdateArticlePriceRequest) returns (UpdateArticlePriceResponse);
    // Onlinbezeichner
    rpc GetArticleOnlinebezeichner(GetArticleOnlinebezeichnerRequest) returns (GetArticleOnlinebezeichnerResponse);
    rpc UpdateArticleOnlinebezeichner(UpdateArticleOnlinebezeichnerRequest) returns (UpdateArticleOnlinebezeichnerResponse);
    rpc GetArticleImage(GetArticleImageRequest) returns (GetArticleImageResponse);
    rpc ListArticleContentErrors(ListArticleContentErrorsRequest) returns (ListArticleContentErrorsResponse);
    // Buchungen
    rpc ListArticleTransactions(ListArticleTransactionsRequest) returns (ListArticleTransactionsResponse);

    // Supplier Article Data
    rpc GetSoneparArticle(GetSoneparArticleRequest) returns (GetSoneparArticleResponse);
    rpc GetEPArticle(GetEPArticleRequest) returns (GetEPArticleResponse);
    // Supplier Import
    rpc ListSupplierImportArticles(ListSupplierImportArticlesRequest) returns (ListSupplierImportArticlesResponse);

    // Meta
    rpc GetTableSchema(GetTableSchemaRequest) returns (GetTableSchemaResponse);
}

message CreateContentSnapshotRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string sprache = 4;
    string by_user = 5;
}

message CreateContentSnapshotResponse {
    repeated string files = 1;
}

message ListContentSnapshotsRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string sprache = 4;
    string by_user = 5;
}

message ListContentSnapshotsResponse {
    repeated string files = 1;
}

message ReadContentSnapshotRequest {
    string path = 1;
}

message ReadContentSnapshotResponse {
    string file = 1;
    string content = 2;
}

message CreateArticleRequest {
    int32 mandant = 1;
    string bezeichnung1 = 2;
    string bezeichnung2 = 3;
    string matchcode = 4;
    string artikelgruppe = 5;
    string basismengeneinheit = 6;
    string verkaufsmenegeneinheit = 7;
    string verpackungseinheit = 8;
    int32 vpme_enthaelt_vkme = 9;
    string grundpreiseinheit = 10;
    double grundpreisbasis = 11;
    double bmee_enthaelt_grundme = 12;
    string hersteller = 13;
    string hartikelnummer = 14;
    string ean = 15;
    int32 aktiv = 16;
    int32 favorit = 17;
    int32 dispositionsmethode = 18;
    double dispofaktor = 19;
    double laenge = 20;
    double breite = 21;
    double hoehe = 22;
    int32 steuerklasse = 23;
    string memo = 24;
    double gewicht = 25;
    int32 lagerfuehrung = 26;
    string letzter_lieferant = 27;
    double bewertungssatz = 28;
    int32 serienummernpflicht = 29;
    string dimensionstext = 30;
    int32 user_scmp_aktiv = 31;
    string versandklasse = 32;
    int32 preisberechnung = 33;
    string energieeffizienzklasse = 34;
    string user_zulieferer_code = 35;
    string user_zulieferer_artikelnummer = 36;
    double user_zulieferer_bestand = 37;
    double kalkulatorischer_ek = 38;
    double letzter_ek = 39;
    string sachkonto_vk = 40;
    int32 reverse_charge = 41;
}

message CreateArticleResponse {
    bool is_success = 1;
    string reference = 2;
    string error  = 3;
}

message Address {
    string adresse = 1;                     
    string mandant = 2;                     
    string kategorie = 3;                   
    string matchcode = 4;                   
    string anrede = 5;                      
    string name1 = 6;                       
    string name2 = 7;                       
    string liefer_zusatz = 8;               
    string liefer_strasse = 9;              
    string liefer_land = 10;                
    string liefer_plz = 11;                 
    string liefer_ort = 12;                 
    string post_zusatz = 13;                
    string post_strasse = 14;               
    string post_land = 15;                  
    string post_plz = 16;                   
    string post_ort = 17;                   
    string ansprache = 18;                  
    string telefon = 19;                    
    string telefax = 20;                    
    string mobilfunk = 21;                  
    string email = 22;                      
    string homepage = 23;                   
    string memo = 24;                       
    string sprache = 25;                    
    string erstkontakt = 26;                
    string gruppe = 27;                     
    string a1_besteuerung = 28;             
    string auswertungskennzeichen = 29;     
    string referenz = 30;                   
    bool aktiv = 31;                        
    string abladestelle = 32;               
    string werkschluessel = 33;             
    string user_ebay_user_id = 35;          
    string user_meinpaket_customer_id = 36; 
    string user_geburtsdatum = 37;          
    string user_liefer_state_or_province = 38; 
    string user_post_state_or_province = 39; 
    string sonderfunktion = 40;             
}

message GetAddressRequest {
    int32 mandant = 1;
    string id = 2;
    bool debug = 3;
}

message GetAddressResponse {
    Address address = 1;
    repeated string queries = 2;
}

message ListAddressesRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    bool debug = 4;
    string query = 5;
}

message ListAddressesResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated Address items = 3;
    repeated string queries = 4;
}

message CreateAddressRequest {
    int32 mandant = 1;
    string by_user = 2;

    string kategorie = 3;                   
    string matchcode = 4;                   
    string anrede = 5;                      
    string name1 = 6;                       
    string name2 = 7;                       
    string liefer_zusatz = 8;               
    string liefer_strasse = 9;              
    string liefer_land = 10;                
    string liefer_plz = 11;                 
    string liefer_ort = 12;                 
    string post_zusatz = 13;                
    string post_strasse = 14;               
    string post_land = 15;                  
    string post_plz = 16;                   
    string post_ort = 17;                   
    string ansprache = 18;                  
    string telefon = 19;                    
    string telefax = 20;                    
    string mobilfunk = 21;                  
    string email = 22;                      
    string homepage = 23;                   
    string memo = 24;                       
    string sprache = 25;                    
    string erstkontakt = 26;                
    string gruppe = 27;                     
    string a1_besteuerung = 28;             
    string auswertungskennzeichen = 29;     
    string referenz = 30;                   
    bool aktiv = 31;                        
    string abladestelle = 32;               
    string werkschluessel = 33;             
    string user_ebay_user_id = 35;          
    string user_meinpaket_customer_id = 36; 
    string user_geburtsdatum = 37;          
    string user_liefer_state_or_province = 38; 
    string user_post_state_or_province = 39; 
    string sonderfunktion = 40; 
    
    CreateMask create_mask = 41;
}

message CreateAddressResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message UpdateAddressRequest {
    int32 mandant = 1;
    string id = 2;
    string by_user = 3;

    string kategorie = 4;                   
    string matchcode = 5;                   
    string anrede = 6;                      
    string name1 = 7;                       
    string name2 = 8;                       
    string liefer_zusatz = 9;               
    string liefer_strasse = 10;              
    string liefer_land = 11;                
    string liefer_plz = 12;                 
    string liefer_ort = 13;                 
    string post_zusatz = 14;                
    string post_strasse = 15;               
    string post_land = 16;                  
    string post_plz = 17;                   
    string post_ort = 18;                   
    string ansprache = 19;                  
    string telefon = 20;                    
    string telefax = 21;                    
    string mobilfunk = 22;                  
    string email = 23;                      
    string homepage = 24;                   
    string memo = 25;                       
    string sprache = 26;                    
    string erstkontakt = 27;                
    string gruppe = 28;                     
    string a1_besteuerung = 29;             
    string auswertungskennzeichen = 30;     
    string referenz = 31;                   
    bool aktiv = 32;                        
    string abladestelle = 33;               
    string werkschluessel = 34;             
    string user_ebay_user_id = 36;          
    string user_meinpaket_customer_id = 37; 
    string user_geburtsdatum = 38;          
    string user_liefer_state_or_province = 39; 
    string user_post_state_or_province = 40; 
    string sonderfunktion = 41; 
    
    UpdateMask update_mask = 42;
}

message UpdateAddressResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message Article {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    bool revise = 4;
}

message ReviseEbayItemsRequest {
    repeated Article items = 1;
    string by_user = 2;
    bool debug = 3;
}

message ReviseEbayItemsResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message UpdateAmazonItemRequest {
    int32 mandant = 1;
    string item_id = 2;
    string by_user = 3;

    UpdateMask update_mask = 4;
    bool aktiv = 5;
}

message UpdateAmazonItemResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message ArticleTransaction {
    int32 mandant = 1;                   // Mandant ID
    string artikelnummer = 2;            // Artikelnummer
    int32 auspraegung_id = 3;            // Ausprägung ID
    string erfassungsdatum = 4;          // Erfassungsdatum der Transaktion
    string benutzer = 5;                 // Benutzer, der die Buchung vorgenommen hat
    string standard_text = 6;            // Standardtext der Buchung
    string memo = 7;                     // Memo oder Notiz zur Buchung
    string job = 8;                      // Job ID
    string herkunfts_lp_kennung = 9;     // Herkunfts-LP-Kennung
    string ziel_lp_kennung = 10;         // Ziel-LP-Kennung
    string bewegungsart = 11;            // Bewegungsart (IU, etc.)
    string bestandswirkung = 12;         // Bestandswirkung (z.B. 0 oder 1)
    float menge_basis = 13;              // Menge Basis
    float menge_lager = 14;              // Menge im Lager
    int32 status = 15;                   // Status der Buchung
    string bewegungsdatum = 16;          // Bewegungsdatum
    string bestands_id = 17;             // Bestands ID
    string lagerkennung = 18;            // Lagerkennung (z.B. "Lost")
    string matchcode = 19;               // Matchcode oder Artikelbeschreibung
    float einzelpreis = 20;              // Einzelpreis
    float bestand = 21;                  // Bestand
}

message ListArticleTransactionsRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    bool debug = 4;
}

message ListArticleTransactionsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ArticleTransaction items = 3;
    repeated string queries = 4;
}

message EPRawArtikel {
    string ep_art_nr = 1;
    string name = 2;
    string ean = 3;
    string isbn = 4;
    string farbe = 5;
    string ep_aenderungsdatum = 6;
    string kategorie_id = 7;
    string kurzbeschreibung = 8;
    string langbeschreibung = 9;
    string hersteller = 10;
    string hartikelnummer = 11;
    double einkaufspreis_ep = 12;
    string bild1 = 13;
    string bild2 = 14;
    string bild3 = 15;
    string merkmale = 16;
    string created_date = 17;
}

message GetEPArticleRequest {
    string reference = 1;
    bool debug = 2;
}

message GetEPArticleResponse {
    EPRawArtikel ep_raw_artikel = 1;
    // EPArtikel ep_artikel = 2;
    repeated string queries = 3;
}

message ArticleLastSale {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string last_auftrag = 4;
    string last_invoice = 5;
}

message ListLastSaleForArticlesRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    repeated string artikelnummern = 4;
    oneof time_frame {
        TimeRange range = 5;
        google.protobuf.Duration duration = 6;
        TimeFramePreset range_shortcut = 7;
    }
    bool debug = 8;
}

message ListLastSaleForArticlesResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ArticleLastSale items = 3;
    google.protobuf.Timestamp start_at = 4;
    google.protobuf.Timestamp end_at = 5;
    repeated string queries = 6;
}

message ArticleMovement {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string p_first_add = 4;
    string last_add = 5;
    string last_move = 6;
    string last_out = 7;
}

message ListArticleMovementsRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    string artikelnummer = 4;
    int32 auspraegung_id = 5;
    bool debug = 6;
}

message ListArticleMovementsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ArticleMovement items = 3;
    repeated string queries = 4;
}

message ArticleListPrice {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    double list_2_price = 4;
    double list_3_price = 5;
    double list_6_price = 6;
}

message ListArticlePricesRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    bool debug = 4;
}

message ListArticlePricesResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ArticleListPrice items = 3;
    repeated string queries = 4;
}

message ImportArtikel {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string title = 4;
    string reference = 5;
    double qty = 6;
    bool user_scmpaktiv = 7;
    string image = 8;
    string content_status = 9;
    string content_last_edit = 10;
    repeated string tags = 11;
}

message ListSupplierImportArticlesRequest {
    enum Supplier {
        SUPPLIER_UNSPECIFIED = 0;
        SUPPLIER_SONEPAR = 1;
        SUPPLIER_EP = 2;
        SUPPLIER_TP = 3;
    }

    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    Supplier supplier = 4;
    string search = 5;
    bool debug = 6;
}

message ListSupplierImportArticlesResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ImportArtikel items = 3;
    repeated string queries = 4;
}

message SupplierDocument {
    string type = 1;
    string url = 2;
}

message SupplierArtikel {
    string reference = 1;
    string gtin = 2;
    repeated string images = 3;
    string category = 4;
    repeated SupplierDocument documents = 5;
}

message SoneparRawArtikel {
    string wg = 1;
    string hersteller = 2;
    string artnr = 3;
    string bez = 4;
    string typenbez = 5;
    string h_artnr = 6;
    string ean = 7;
    string langtext = 8;
    string merkmale = 9;
    string artklasse = 10;
    string bildurl = 11;
    string aehnlich = 12;
    string produktkategorie = 13;
    string lieferstatus = 14;
    string sperrgut = 15;
    string hwg = 16;
    string bearbeiten = 17;
    string markenname = 18;
    string bez2 = 19;
    string herstellerprogramm = 20;
    string artiklrelationen = 21;
    string reachkennzeichen = 22;
    string zus_bilder = 23;
    string zus_dokumente = 24;
    string minbez = 25;
    string envkv_text = 26;
    string kennz_abakus = 27;
    string zolltarifnr = 28;
    string logistikdaten = 29;
    string oekod_pdf = 30;
    string ursprungsland = 31;
    string energielabel = 32;
  }

message GetSoneparArticleRequest {
    string reference = 1;
    bool debug = 2;
}

message GetSoneparArticleResponse {
    SoneparRawArtikel sonepar_raw_artikel = 1;
    SupplierArtikel supplier_artikel = 2;
    repeated string queries = 3;
}

enum ContentStatus {
    CONTENT_STATUS_UNSPECIFIED = 0;
    CONTENT_STATUS_REVIEWED = 1;
    CONTENT_STATUS_BLACKLISTED = 2;
    CONTENT_STATUS_ABVERKAUF = 3;
    // CONTENT_STATUS_ERSATZTEIL = 4;
    CONTENT_STATUS_EIGENBEDARF = 5;
    CONTENT_STATUS_VERSCHROTTUNG = 6;
    // CONTENT_STATUS_VERSTEIEGERUNG = 7;
    CONTENT_STATUS_VERSTEIGERUNG = 8;
}

message SetArticleContentStatusRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string by_user = 4;
    ContentStatus status = 5;
}

message SetArticleContentStatusResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message UpdateVKBelegRequest {
    int32 mandant = 1;
    int64 bel_id = 2;
    string by_user = 3;

    UpdateMask update_mask = 4;
    string liefertermin = 5; // iso-format date

}

message UpdateVKBelegResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message VKBelegClassifierV1 {
    string name = 1;
    string description = 2;
    repeated string for_events = 3;
    string issue = 4;
    repeated string tags = 5;
    bool active = 6;
}

message ListVKBelegClassifiersV1Request {}

message ListVKBelegClassifiersV1Response {
    repeated VKBelegClassifierV1 items = 3;
}

message ClassifyVKBelegEventV1Request {
    string id = 1;
    bool debug = 2; // when debug true ther tags are not saved in the event
}

message ClassifyVKBelegEventV1Response {
    string id = 1;
    repeated string tags = 2;
}

message AddTagToVKBelegEventRequest {
    string id = 1;
    repeated string tags = 2;
}

message AddTagToVKBelegEventResponse {
    EventItemVkBeleg event = 1;
}

message RemoveTagFromVKBelegEventRequest {
    string id = 1;
    repeated string tags = 2;
}

message RemoveTagFromVKBelegEventResponse {
    EventItemVkBeleg event = 1;
}

message MarkTagDoneVKBelegEventRequest {
    string id = 1;
    repeated string tags = 2;
    string by_user = 3;
}

message MarkTagDoneVKBelegEventResponse {
    EventItemVkBeleg event = 1;
}

message UpdateArticleOnlinebezeichnerRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string by_user = 4;

    string bezeichnung_1 = 5;
    string bezeichnung_2 = 6;
    string bezeichnung_3 = 7;
    string bezeichnung_4 = 8;
    string bezeichnung_5 = 9;
    string bezeichnung_6 = 10;
    string bezeichnung_7 = 11;
    string bezeichnung_8 = 12;
    string bezeichnung_9 = 13;
    string bezeichnung_10 = 14;
    string bezeichnung_11 = 15;
    string bezeichnung_12 = 16;
    string bezeichnung_13 = 17;
    string bezeichnung_14 = 18;
    string bezeichnung_15 = 19;
    string bezeichnung_16 = 20;
    string bezeichnung_17 = 21;
    string bezeichnung_18 = 22;
    string bezeichnung_19 = 23;
    string bezeichnung_20 = 24;
    string bezeichnung_21 = 25;
    string bezeichnung_22 = 26;
    string bezeichnung_23 = 27;
    string bezeichnung_24 = 28;
    string bild_1 = 29;
    string bild_2 = 30;
    string bild_3 = 31;
    string bild_4 = 32;
    string bild_5 = 33;
    string bild_6 = 34;
    string bild_7 = 35;
    string bild_8 = 36;
    string bild_9 = 37;
    string bild_10 = 38;
    string bild_11 = 39;
    string bild_12 = 40;
    string bild_13 = 41;
    string bild_14 = 42;
    string bild_15 = 43;
    string bild_16 = 44;
    string bild_17 = 45;
    string bild_18 = 46;
    string bild_19 = 47;
    string bild_20 = 48;
    string bild_21 = 49;
    string bild_22 = 50;
    string bild_23 = 51;
    string bild_24 = 52;

    UpdateMask update_mask = 53;
    string sprache = 54;
}

message UpdateArticleOnlinebezeichnerResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message UpdateEbayItemRequest {
    int32 mandant = 1;
    string item_id = 2;
    string by_user = 3;

    bool aktiv = 4;
    bool freigabe = 5;
    string title = 6;
    string sub_title = 7;
    double quantity = 8;
    string store_category_id = 9;
    string category_id = 10;
    string photo_url = 11;
    string photo_url2 = 12;
    string photo_url3 = 13;
    string photo_url4 = 14;
    string photo_url5 = 15;
    string photo_url6 = 16;
    string photo_url7 = 17;
    string photo_url8 = 18;
    string photo_url9 = 19;
    string photo_url10 = 20;
    string photo_url11 = 21;
    string photo_url12 = 22;
    string payment_profile_id = 23;
    string shipping_profile_id = 24;
    string return_profile_id = 25;
    int32 condition_id = 26;
    string repair_score = 27;
    string condition_description = 28;
    string description = 29;
    bool check_dispo = 30;
    bool relist = 31;
    bool list_after_end = 32;
    UpdateMask update_mask = 33;

    string restricted_to_business = 34;
    string signal_word = 35;
    string pictogram1 = 36;
    string pictogram2 = 37;
    string pictogram3 = 38;
    string pictogram4 = 39;
    string statement1 = 40;
    string statement2 = 41;
    string statement3 = 42;
    string statement4 = 43;
    string statement5 = 44;
    string statement6 = 45;
    string statement7 = 46;
    string statement8 = 47;

    string photo_url13 = 48;
    string photo_url14 = 49;
    string photo_url15 = 50;
    string photo_url16 = 51;
    string photo_url17 = 52;
    string photo_url18 = 53;
    string photo_url19 = 54;
    string photo_url20 = 55;
    string photo_url21 = 56;
    string photo_url22 = 57;
    string photo_url23 = 58;
    string photo_url24 = 59;

    string certificate_of_analysis = 60;
    string certificate_of_conformity = 61;
    string declaration_of_conformity = 62;
    string instructions_for_use = 63;
    string other_safety_documents = 64;
    string safety_data_sheet = 65;
    string trouble_shooting_guide = 66;
    string user_guide_or_manual = 67;
    string installation_instructions = 68;
    string safety_component = 69;
    string safety_pictogram1 = 70;
    string safety_pictogram2 = 71;

    string safety_statement1 = 72;
    string safety_statement2 = 73;
    string safety_statement3 = 74;
    string safety_statement4 = 75;
    string safety_statement5 = 76;
    string safety_statement6 = 77;
    string safety_statement7 = 78;
    string safety_statement8 = 79;
}

message UpdateEbayItemResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message EbayItem {
    string item_id = 1;
    int32 mandant = 2;
    string artikelnummer = 3;
    int32 auspraegung_id = 4;
    int32 seller_id = 5;
    int32 type = 6;
    int32 site_id = 7;
    string title = 8;
    string sub_title = 9;
    double quantity = 10;
    string store_category_id = 11;
    string category_id = 12;
    string photo_url = 13;
    string photo_url2 = 14;
    string photo_url3 = 15;
    string photo_url4 = 16;
    string photo_url5 = 17;
    string photo_url6 = 18;
    string photo_url7 = 19;
    string photo_url8 = 20;
    string photo_url9 = 21;
    string photo_url10 = 22;
    string photo_url11 = 23;
    string photo_url12 = 24;
    string payment_profile_id = 25;
    string shipping_profile_id = 26;
    string return_profile_id = 27;
    int32 condition_id = 28;
    string repair_score = 29;
    string condition_description = 30;
    string description = 31;
    bool check_dispo = 32;
    bool relist = 33;
    bool list_after_end = 34;
    bool aktiv = 35;
    bool freigabe = 36;

    string restricted_to_business = 37;
    string signal_word = 38;
    string pictogram1 = 39;
    string pictogram2 = 40;
    string pictogram3 = 41;
    string pictogram4 = 42;
    string statement1 = 43;
    string statement2 = 44;
    string statement3 = 45;
    string statement4 = 46;
    string statement5 = 47;
    string statement6 = 48;
    string statement7 = 49;
    string statement8 = 50;

    string photo_url13 = 51;
    string photo_url14 = 52;
    string photo_url15 = 53;
    string photo_url16 = 54;
    string photo_url17 = 55;
    string photo_url18 = 56;
    string photo_url19 = 57;
    string photo_url20 = 58;
    string photo_url21 = 59;
    string photo_url22 = 60;
    string photo_url23 = 61;
    string photo_url24 = 62;

    string certificate_of_analysis = 63;
    string certificate_of_conformity = 64;
    string declaration_of_conformity = 65;
    string instructions_for_use = 66;
    string other_safety_documents = 67;
    string safety_data_sheet = 68;
    string trouble_shooting_guide = 69;
    string user_guide_or_manual = 70;
    string installation_instructions = 71;
    string safety_component = 72;
    string safety_pictogram1 = 73;
    string safety_pictogram2 = 74;

    string safety_statement1 = 75;
    string safety_statement2 = 76;
    string safety_statement3 = 77;
    string safety_statement4 = 78;
    string safety_statement5 = 79;
    string safety_statement6 = 80;
    string safety_statement7 = 81;
    string safety_statement8 = 82;
}

message GetEbayItemRequest {
    int32 mandant = 1;
    string item_id = 2;
    bool debug = 3;
}

message GetEbayItemResponse {
    EbayItem item = 1;
    repeated string queries = 2;
}

message ListEbayItemsRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    string item_id = 4;
    bool debug = 5;
}

message ListEbayItemsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated EbayItem items = 3;
    repeated string queries = 4;
}

message ArticleContentError {
    enum ContentErrorType {
        CONTENT_ERROR_TYPE_UNSPECIFIED = 0;
        CONTENT_ERROR_TYPE_EAN_INVALID = 1;
    }

    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string table = 4;
    string field = 5;
    string value = 6;
    string reason = 7;
    repeated string tags = 8;
}

message ListArticleContentErrorsRequest {
    int32 mandant = 1;
    int32 page = 2;
    int32 page_size = 3;
    ArticleContentError.ContentErrorType type = 4;
    bool debug = 5;
}

message ListArticleContentErrorsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ArticleContentError items = 3;
    repeated string queries = 4;
}

message ListAmazonItemsRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    bool debug = 4;
}

message ListAmazonItemsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated LBAmazonItem items = 3;
    repeated string queries = 4;
}

enum TimeSeriesGrouper {
    TIME_SERIES_GROUPER_DAILY_UNSPECIFIED = 0;
    TIME_SERIES_GROUPER_MONTHLY = 1;
    TIME_SERIES_GROUPER_YEARLY = 2;
    TIME_SERIES_GROUPER_DAILY_DESC = 3;
    TIME_SERIES_GROUPER_MONTHLY_DESC = 4;
    TIME_SERIES_GROUPER_YEARLY_DESC = 5;
}

message SalechannelReportFilter {
    int32 mandant = 1;
    string start_date = 2; // iso-format
    string end_date = 3; // iso-format
    repeated string customer_group_ids = 4;
    repeated VKBelegart belegart_items = 5;
    repeated string skus = 6;
}

message SalechannelReportGroupBy {
    TimeSeriesGrouper time_series_grouper = 1;
    bool customer_group = 2;
}

message GetSalechannelReportRequest {
    int32 page = 1;
    int32 page_size = 2;
    SalechannelReportFilter filter = 3;
    SalechannelReportGroupBy group_by = 4;
    bool debug = 6;
}

message SalechannelReportDataPoint {
    string grouper = 1;
    map<string, string> group_by = 2;
    int32 orders = 3;
    double turnover = 4;
    double product_qty = 5;
    double product_turnover = 6;
    double product_profit = 7;
    string customer_group_id = 8;
}

message GetSalechannelReportResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated SalechannelReportDataPoint data_points = 3;
    repeated string queries = 4;
    string start_at = 5;
    string end_at = 6;
}

message ArticleWarehouseStock {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string lagerkennung = 4;
    double bestand = 5;
    string eingangsdatum_min = 6;
    string eingangsdatum_max = 7;
}

message ListArticleWarehouseStocksRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    string artikelnummer = 4;
    int32 auspraegung_id = 5;
    bool debug = 6;
}

message ListArticleWarehouseStocksResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ArticleWarehouseStock items = 3;
    repeated string queries = 4;
}

message ArticleOnlinebezeichner {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string bezeichnung_1 = 4;
    string bezeichnung_2 = 5;
    string bezeichnung_3 = 6;
    string bezeichnung_4 = 7;
    string bezeichnung_5 = 8;
    string bezeichnung_6 = 9;
    string bezeichnung_7 = 10;
    string bezeichnung_8 = 11;
    string bezeichnung_9 = 12;
    string bezeichnung_10 = 13;
    string bezeichnung_11 = 14;
    string bezeichnung_12 = 15;
    string bezeichnung_13 = 16;
    string bezeichnung_14 = 17;
    string bezeichnung_15 = 18;
    string bezeichnung_16 = 19;
    string bezeichnung_17 = 20;
    string bezeichnung_18 = 21;
    string bezeichnung_19 = 22;
    string bezeichnung_20 = 23;
    string bezeichnung_21 = 24;
    string bezeichnung_22 = 25;
    string bezeichnung_23 = 26;
    string bezeichnung_24 = 27;
    string bild_1 = 28;    
    string bild_2 = 29;
    string bild_3 = 30;
    string bild_4 = 31;
    string bild_5 = 32;
    string bild_6 = 33;
    string bild_7 = 34; 
    string bild_8 = 35;
    string bild_9 = 36;
    string bild_10 = 37;
    string bild_11 = 38;
    string bild_12 = 39;
    string bild_13 = 40;
    string bild_14 = 41;
    string bild_15 = 42;
    string bild_16 = 43;
    string bild_17 = 44;
    string bild_18 = 45;
    string bild_19 = 46;
    string bild_20 = 47;
    string bild_21 = 48;
    string bild_22 = 49;
    string bild_23 = 50;
    string bild_24 = 51;
    string sprache = 52;
}

message GetArticleOnlinebezeichnerRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string sprache = 4;
    bool debug = 5;
}

message GetArticleOnlinebezeichnerResponse {
    ArticleOnlinebezeichner onlinebezeichner = 1;
    string image_pool_base_url = 2;
    repeated string queries = 3;
}

message GetTableSchemaRequest {
    string table = 1;
}

message GetTableSchemaResponse {
    string query = 1;
    string go_struct = 2;
    string go_convert = 3;
    string proto_message = 4;
}

message ListVKBelegsRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    string search = 4;
    repeated VKBelegart belegarts = 5;
    string versand = 6;
    bool debug = 7;
}

message VKBelegListItem {
    int64 bel_id = 1;
    int64 vor_id = 2;
    string kundengruppe = 3;
    string user_belegjahrbelegnummer = 4;
    string referenznummer = 5;
    string user_zahlungsreferenz = 6;
    string belegart = 7;
    string a0_empfaenger = 8;
    google.protobuf.Timestamp user_cd = 9;
}

message ListVKBelegsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated VKBelegListItem items = 3;
    repeated string queries = 4;
}

message BatchSetVersandOnVKBelegRequest {
    int32 mandant = 1;
    repeated int64 bel_ids = 2;
    string versand = 3;
    string by_user = 4;
    bool debug = 5;
}

message BatchSetVersandOnVKBelegResponse {
    string query = 1;
}

message SetVersandOnVKBelegRequest {
    int32 mandant = 1;
    int64 bel_id = 2;
    string versand = 3;
    string by_user = 4;
    bool debug = 5;
}

message SetVersandOnVKBelegResponse {
    string query = 1;
}

message ListVKBelegVersandartsRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    string search = 4;
    bool debug = 5;
}

message VersandartItem {
    int32 mandant = 1;
    string code = 2;
}

message ListVKBelegVersandartsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated VersandartItem items = 3;
    repeated string queries = 4;
}

message ArticleRank {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    double total_belegs = 4;
    double total_positions = 5;
    string title = 6;
    double turnover = 7;
    double profit = 8;
    int32 rank = 9;
}

message ListArticleRanksRequest {
    enum Section {
        SECTION_UNSPECIFIED = 0;
        SECTION_NEUWARE = 1;
        SECTION_B_WARE = 2;
    }

    int32 page_size = 1;
    int32 page = 2;
    int32 mandant = 3;
    string artikelnummer = 4;
    int32 auspraegung_id = 5;
    
    Section section = 6;
    bool debug = 7;
    string sku = 8;
    oneof time_frame {
        TimeRange range = 9;
        google.protobuf.Duration duration = 10;
        TimeFramePreset range_shortcut = 11;
    }
    string kundengruppe = 12;
}

message ListArticleRanksResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated ArticleRank items = 3;
    repeated string queries = 4;
    google.protobuf.Timestamp start_at = 5;
    google.protobuf.Timestamp end_at = 6;
}

message UpdateArticleRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;   
    string by_user = 4;

    string bezeichnung1 = 5;
    string bezeichnung2 = 6;
    string hersteller = 7;
    int32 nachweispflicht = 8;
    string user_soneparartikel = 9;
    double user_bestandsonepar = 10;
    string user_epartikel = 11;
    double user_bestandep = 12;
    string user_energieeffizienzklasse = 13;
    string user_versandklasse = 14;
    double user_preisermittlungszuschlag = 15;
    string user_zulieferercode = 16;
    string user_zuliefererartikelnummer = 17;
    double user_zuliefererbestand = 18;
    double laenge = 19;
    double breite = 20;
    double hoehe = 21;
    double umrechnungsfaktorgp = 22;
    string grundpreiseinheit = 23;
    double grundpreisbasis = 24;
    bool istfavorit = 25;

    double gewicht = 26;
    double letzterek = 27;
    double mittlererek = 28;
    double kalkulatorischerek = 29;
    string eannummer = 30;

    UpdateMask update_mask = 31;

    string user_content_status = 32;
    string user_content_last_edit = 33;
    string user_voelkner_id = 34;
    string user_idealo_id = 35;
    string user_eec_skala = 36;
    string user_eprel_nr = 37;
    string user_eprel_kategorie = 38;
    string user_weee_nr = 39;
    string user_weee_marke = 40;
    string user_weee_kategorie = 41;
    string user_herstellernummer = 42;
    string user_group_key = 43;
    double user_uvp_price = 44;
    string user_uvp_currency = 45;
    string user_uvp_at = 46;
    string user_hauptkategorie = 47;
    string user_unterkategorie = 48;
    string user_produkttyp = 49;
    string user_serie = 50;
    string user_basename = 51;
    string user_keyword = 52;
    string user_farbe = 53;
    string user_conrad_id = 54;
    string user_hersteller_adress_id = 55;
    string user_importeur_adress_id = 56;
    string user_verantwortliche_person_adress_id = 57;

    bool user_ce_label = 58;
    bool user_ce_label_verified = 59;

    bool user_fuag_required = 60;
    bool user_fuag_hat_power_supply = 61;
    float user_fuag_min = 62;
    float user_fuag_max = 63;
    string user_fuag_prefix = 64;
}

message UpdateArticleResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message EnableArticleRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    string by_user = 3;
}

message EnableArticleResponse {}

message DisableArticleRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    string by_user = 3;
}

message DisableArticleResponse {}

message EnableShopArticleRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;   
    string by_user = 4;
}

message EnableShopArticleResponse {}

message DisableShopArticleRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string by_user = 4;
}

message DisableShopArticleResponse {}

message GetArticleGtinRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
}

message GetArticleGtinResponse {
    string gtin = 1;
}

message ArticleImage {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string bild_1 = 4;
    string bild_2 = 5;
    string bild_3 = 6;
    string bild_4 = 7;
    string bild_5 = 8;
    string bild_6 = 9;
    string bild_7 = 10;
    string bild_8 = 11;
    string bild_9 = 12;
    string bild_10 = 13;
    string bild_11 = 14;
    string bild_12 = 15;
    string bild_13 = 16;
    string bild_14 = 17;
    string bild_15 = 18;
    string bild_16 = 19;
    string bild_17 = 20;
    string bild_18 = 21;
    string bild_19 = 22;
    string bild_20 = 23;
    string bild_21 = 24;
    string bild_22 = 25;
    string bild_23 = 26;
    string bild_24 = 27;
}

message GetArticleImageRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
}

message GetArticleImageResponse {
    ArticleImage article_image = 1;
}

message KhkArtikel {
    string artikelnummer = 1;
    int32 mandant = 2;
    string bezeichnung1 = 3;
    string bezeichnung2 = 4;
    string matchcode = 5;
    string langtext = 6;
    string dimensionstext = 7;
    string dimensionstexthtml = 8;
    string dimensionstextrtf = 9;
    string memo = 10;
    string artikelgruppe = 11;
    string ersatzartikelnummer = 12;
    string hersteller = 13;
    string hartikelnummer = 14;
    string steuerklasse = 15;
    string erloescode = 16;
    string wareneingangscode = 17;
    string wareneinsatzcode = 18;
    string warenbestandcode = 19;
    string sachkontovk = 20;
    string sachkontoek = 21;
    string sachkontowz = 22;
    string sachkontowb = 23;
    int32 isteinmalartikel = 24;
    int32 istprovisionierbar = 25;
    int32 nachweispflicht = 26;
    string verkaufsmengeneinheit = 27;
    string mengenberechnungvk = 28;
    int32 dezimalstellenvk = 29;
    double umrechnungsfaktorvk = 30;
    string verpackungseinheitvk = 31;
    double umrechnungsfaktorvpvk = 32;
    string preiseinheitvk = 33;
    string basismengeneinheit = 34;
    int32 dezimalstellenbasis = 35;
    string lagermengeneinheit = 36;
    int32 dezimalstellenlager = 37;
    double umrechnungsfaktorlme = 38;
    int32 lagerfuehrung = 39;
    int32 lagerplatzzuordnung = 40;
    string gewichtseinheit = 41;
    int32 preispflegeek = 42;
    int32 istbestellartikel = 43;
    int32 istverkaufsartikel = 44;
    int32 stuecklistentyp = 45;
    int32 istkundenkartei = 46;
    int32 istlieferantenkartei = 47;
    int32 istrabattfaehig = 48;
    double gemeinkostenzuschlag = 49;
    double bezugskostenzuschlag = 50;
    double gewinnzuschlag = 51;
    double bewertungssatz = 52;
    string kostenstelle = 53;
    string kostentraeger = 54;
    bool istfavorit = 55;
    int32 istvorlage = 56;
    int32 chargenpflicht = 57;
    string warennummer = 58;
    string ursprungsregion = 59;
    string bestimmungsregion = 60;
    string rabattgruppe = 61;
    double laenge = 62;
    double breite = 63;
    double hoehe = 64;
    string intrastatmengeneinheit = 65;
    double umrechnungsfaktorintrame = 66;
    int32 dezimalstellenintrame = 67;
    string hauptartikelgruppe = 68;
    string vaterartikelgruppe = 69;
    string grundpreiseinheit = 70;
    double umrechnungsfaktorgp = 71;
    double grundpreisbasis = 72;
    int32 platzid = 73;
    string entnahmeverfahren = 74;
    string variante = 75;
    int32 inventurmethode = 76;
    bool aktiv = 77;
    int32 artikelart = 78;
    string ressourcenref = 79;
    string zeichnungsnummer = 80;
    string gemeinkostenid = 81;
    double minimalelosgroesse = 82;
    double maximalelosgroesse = 83;
    int32 istfertigungsartikel = 84;
    int32 istunterbaugruppe = 85;
    int32 istersatzteil = 86;
    int32 istverschleissteil = 87;
    string schwundart = 88;
    double schwund = 89;
    int32 pkonfigistkonfigartikel = 90;
    string pkonfiganwendung = 91;
    int32 istfremdleistung = 92;
    double kalkulationslosgroesse = 93;
    string ursprungsland = 94;
    string statwerteingang = 95;
    string statwertversendung = 96;
    string eigenmasse = 97;
    string statverfahren = 98;
    int32 dezimalstellenpreis = 99;
    int32 verbrauchsteuer = 100;
    int32 besteuerungsart = 101;
    bytes timestamp = 102;
    string user_versandklasse = 103;
    string user_soneparartikel = 104;
    string user_exportb2b = 105;
    string user_topnew = 106;
    bool user_preisberechnung = 107;
    double user_preisermittlungszuschlag = 108;
    double user_preislistenfaktor = 109;
    string user_importid = 110;
    string user_zentraldispo = 111;
    double user_bestandsonepar = 112;
    string user_energieeffizienzklasse = 113;
    string user_meinpaketmarketplacecategorie = 114;
    string user_meinpaketvariantconfiguration = 115;
    string user_accessorieincart = 116;
    string user_360grad = 117;
    string user_schutzklickcategory = 118;
    bool user_bware = 119;
    string user_epartikel = 120;
    double user_bestandep = 121;
    string user_bwarelabel = 122;
    string langtexthtml = 123;
    string langtextrtf = 124;
    int32 herkunft = 125;
    int32 istskontierfaehig = 126;
    string user_autovergabesn = 127;
    string user_zulieferercode = 128;
    string user_zuliefererartikelnummer = 129;
    double user_zuliefererbestand = 130;
    bool user_ce_label = 131;
    bool user_ce_label_verified = 132;
}

message KhkArtikelVariante {
    string artikelnummer = 1;
    int32 mandant = 2;
    int32 auspraegungid = 3;
    string eannummer = 4;
    string abcklasse = 5;
    double lagerbestand = 6;
    double lagerbestandohnedisp = 7;
    double lagerbestandverfuegbar = 8;
    double gewicht = 9;
    double gewichtlme = 10;
    double letzterek = 11;
    double mittlererek = 12;
    double kalkulatorischerek = 13;
    double letzterfek = 14;
    int32 hatzubehoer = 15;
    int32 earmeldepflicht = 16;
    string earregnr = 17;
    string earmarke = 18;
    string earkategorie = 19;
    string eargeraeteart = 20;
    string earproduktgruppe = 21;
    double eargewicht = 22;
    string user_hattekeinenlagerbestandvorwe = 23;
    string formelid = 24;
    string dispoformel = 25;
    double dispofaktor = 26;
    double bestellmenge = 27;
    int32 bestellzeitpunkt = 28;
    double meldebestand = 29;
    string hauptlieferant = 30;
    string letzterlieferant = 31;
    int32 wiederbeschaffungszeit = 32;
    int32 wsistwebshopartikel = 33;
    int32 wsistverkaufsartikel = 34;
    string wsterminverkaufab = 35;
    int32 wsistsichtbar = 36;
    int32 wsistneu = 37;
    string wsterminneubis = 38;
    int32 wslageranzeige = 39;
    int32 wszeigehersteller = 40;
    string wsguid = 41;
    int32 wsistgeaendert = 42;
    int32 wsisthauptbildgeaendert = 43;
    int32 wsistgaleriegeaendert = 44;
    string wsaktuelleshauptbild = 45;
    string wsaktuellegaleriebilder = 46;
    int32 wsiststandardvariante = 47;
    string wsterminverkaufbis = 48;
    double wsmindestbestellmenge = 49;
    double wsstaffelung = 50;
    bool user_scmpaktiv = 51;
    string lagermodulekbme = 52;
    string lagermodulvkbme = 53;
    string user_content_status = 54;
    string user_content_last_edit = 55;
    string user_voelkner_id = 56;
    string user_idealo_id = 57;
    string user_eec_skala = 58;
    string user_eprel_nr = 59;
    string user_eprel_kategorie = 60;
    string user_weee_nr = 61;
    string user_weee_marke = 62;
    string user_weee_kategorie = 63;
    string user_herstellernummer = 64;
    string user_group_key = 65;
    double user_uvp_price = 66;
    string user_uvp_currency = 67;
    string user_uvp_at = 68;
    string user_hauptkategorie = 69;
    string user_unterkategorie = 70;
    string user_produkttyp = 71;
    string user_serie = 72;
    string user_basename = 73;
    string user_keyword = 74;
    string user_farbe = 75;
    string user_conrad_id = 76;
    string user_hersteller_adress_id = 77;
    string user_importeur_adress_id = 78;
    string user_verantwortliche_person_adress_id = 79;
    bool user_fuag_required = 80;
    bool user_fuag_hat_power_supply = 81;
    float user_fuag_min = 82;
    float user_fuag_max = 83;
    string user_fuag_prefix = 84;
}

message KhkVariantenAuspraegungen {
    int32 mandant = 1;
    int32 auspraegung_id = 2;
    string variante = 3;
    string auspraegung1 = 4;
    string auspraegung2 = 5;
}

message GetArticleCoreDataRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
}

message GetArticleCoreDataResponse {
    KhkArtikel khk_artikel = 1;
    KhkArtikelVariante khk_artikel_variante = 2;
    KhkVariantenAuspraegungen khk_varianten_auspraegungen = 3;
}

message FieldMaskArticle {
    enum Field {
        FIELD_UNSPECIFIED = 0;
        FIELD_MANDANT = 1;
        FIELD_ARTIKELNUMMER = 2;
        FIELD_AUSPRAEGUNG_ID = 3;
        FIELD_MATCHCODE = 4;
        FIELD_BEZEICHNUNG1 = 5;
        FIELD_BEZEICHNUNG2 = 6;
        FIELD_VARIANTE = 7;
        FIELD_VARIANTEN_AUSPRAEGUNG = 8;
        FIELD_HERSTELLER = 9;
        FIELD_VERSANDKLASSE = 10;
        FIELD_LAGERBESTAND_VERFUEGBAR = 11;
        FIELD_LETZTER_EK = 12;
        FIELD_MITTLERER_EK = 13;
        FIELD_KALKULATORISCHER_EK = 14;
        FIELD_SCMP_AKTIV = 15;
        FIELD_ZULIEFERER_CODE = 16;
        FIELD_ZULIEFERER_ARTIKELNUMMER = 17;
        FIELD_ZULIEFERER_BESTAND = 18;
        FIELD_AKTIV = 19;
        FIELD_EAN = 20;
        FIELD_ARTIKELGRUPPE = 21;
        FIELD_USER_CONTENT_STATUS = 22;
        FIELD_USER_CONTENT_LAST_EDIT = 23;
        FIELD_USER_VOELKNER_ID = 24;
        FIELD_USER_IDEALO_ID = 25;
        FIELD_USER_CONRAD_ID = 26;
        FIELD_USER_EEC_SKALA = 27;
        FIELD_USER_EPREL_NR = 28;
        FIELD_USER_EPREL_KATEGORIE = 29;
        FIELD_USER_WEEE_NR = 30;
        FIELD_USER_WEEE_MARKE = 31;
        FIELD_USER_WEEE_KATEGORIE = 32;
        FIELD_USER_HERSTELLERNUMMER = 33;
        FIELD_USER_GROUP_KEY = 34;
        FIELD_USER_UVP_PRICE = 35;
        FIELD_USER_UVP_CURRENCY = 36;
        FIELD_USER_UVP_AT = 37;
        FIELD_USER_HAUPTKATEGORIE = 38;
        FIELD_USER_UNTERKATEGORIE = 39;
        FIELD_USER_PRODUKT_TYP = 40;
        FIELD_USER_SERIE = 41;
        FIELD_USER_BASENAME = 42;
        FIELD_USER_KEYWORD = 43;
        FIELD_USER_FARBE = 44;
        FIELD_STEUERKLASSE = 45;
        FIELD_USER_HERSTELLER_ADRESS_ID = 46;
        FIELD_USER_IMPORTEUR_ADRESS_ID = 47;
        FIELD_USER_VERANTWORTLICHE_PERSON_ADRESS_ID = 48;
        FIELD_LAGERBESTAND_OHNE_DISPO = 49;
        FIELD_USER_FUAG_REQUIRED = 50;
        FIELD_USER_FUAG_HAT_POWER_SUPPLY = 51;
        FIELD_USER_FUAG_MIN = 52;
        FIELD_USER_FUAG_MAX = 53;
        FIELD_USER_FUAG_PREFIX = 54;
    }

    repeated Field paths = 1;
}

message ListArticlesRequest {
    int32 mandant = 1;
    int32 page_size = 2;
    int32 page = 3;
    string artikelnummer = 4;
    string sku = 5;
    string gtin = 6;
    string versandklasse = 7;
    string hersteller = 8;
    string search = 9;
    bool debug = 10;
    FieldMaskArticle field_mask = 11;
    string query = 12;
}

message ListArtikel {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string matchcode = 4;
    string bezeichnung1 = 5;
    string bezeichnung2 = 6;
    string variante = 7;
    string varianten_auspraegung = 8;
    string hersteller = 9;
    string versandklasse = 10;
    double lagerbestand_verfuegbar = 11;
    double letzter_ek = 12;
    double mittlerer_ek = 13;
    double kalkulatorischer_ek = 14;
    bool scmp_aktiv = 15;
    string zulieferer_code = 16;
    string zulieferer_artikelnummer = 17;
    double zulieferer_bestand = 18;
    bool aktiv = 19;
    string ean = 20;
    string artikelgruppe = 21;
    string user_content_status = 22;
    string user_content_last_edit = 23;
    string user_voelkner_id = 24;
    string user_idealo_id = 25;
    string user_conrad_id = 26;
    string user_eec_skala = 27;
    string user_eprel_nr = 28;
    string user_eprel_kategorie = 29;
    string user_weee_nr = 30;
    string user_weee_marke = 31;
    string user_weee_kategorie = 32;
    string user_herstellernummer = 33;
    string user_group_key = 34;
    double user_uvp_price = 35;
    string user_uvp_currency = 36;
    string user_uvp_at = 37;
    string user_hauptkategorie = 38;
    string user_unterkategorie = 39;
    string user_produkt_typ = 40;
    string user_serie = 41;
    string user_basename = 42;
    string user_keyword = 43;
    string user_farbe = 44;
    int32 steuerklasse = 45;
    string user_hersteller_adress_id = 46;
    string user_importeur_adress_id = 47;
    string user_verantwortliche_person_adress_id = 48;
    double lagerbestand_ohne_dispo = 49;
    bool user_fuag_required = 50;
    bool user_fuag_hat_power_supply = 51;
    float user_fuag_min = 52;
    float user_fuag_max = 53;
    string user_fuag_prefix = 54;
}

message ListArticlesResponse {
    int32 mandant = 1;
    int32 page = 2;
    int32 page_size = 3;
    repeated ListArtikel items = 4;
    repeated string queries = 5;
}

message PriceList {
    int32 mandant = 1;
    int64 id = 2;
    string name = 3;
    string currency = 4;
    bool is_brutto_price = 5;
}

message ListArticlesPriceListsRequest {
    int32 mandant = 1;
    int32 page_size = 2;
    int32 page = 3;
}

message ListArticlesPriceListsResponse {
    repeated PriceList price_lists = 1;
}

message GetArticlePricesRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    repeated int64 price_list_ids = 4;
    bool debug = 5;
}

message ArticlePrice {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    int64 list = 4;
    string list_name = 5;
    double price = 6;
    string currency = 7;
    int64 id = 8;
}

message GetArticlePricesResponse {
    repeated ArticlePrice prices = 1;
    repeated string queries = 2;
}

message UpdateArticlePriceRequest {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    int64 list = 4;
    double price = 5;
    string by_user_id = 6;
    string by_user_name = 7;
    bool debug = 8;
}

message UpdateArticlePriceResponse {
    repeated string queries = 1;
}

message CreateFeedFileRequest {
    string feed = 1;
    string filename = 2;
    bytes content = 3;
}

message CreateFeedFileResponse {
    string uri = 1;
}

message GetFeedByNameRequest {
    string name = 1;
    string supplier = 2;
}

message GetFeedByNameResponse {
    Feed feed = 1;
}

message GetFeedRequest {
    string id = 1;
}

message ParseFeedFileProductContentRequest {
    string id = 1;
    string uri = 2;
}

message ParseFeedFileProductContentResponse {}

message GetFeedFileContentRequest {
    string id = 1;
    string uri = 2;
}

message GetFeedFileContentResponse {
    bytes content = 1;
    string content_type = 2;
}

message GetFeedResponse {
    Feed feed = 1;
}

message ListFeedsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_NAME = 1;
        FIELD_CREATED_AT = 2;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListFeedsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListFeedsFilter filters = 6;
}

message ListFeedsResponse {
    repeated Feed feeds = 1;
    string page_token = 2;
}

message ListFeedFilesRequest {
    string id = 1;
    string date_suffix = 2;
}

message ListFeedFilesResponse {
    repeated string uris = 1;
}

message CreateFeedRequest {
    string supplier = 1;
    string name = 2;
    oneof source {
        Feed.HttpSource http = 3;
        Feed.FtpSource ftp = 4;
    }
}

message CreateFeedResponse {
    Feed feed = 1;
}

message DeleteFeedRequest {
    string id = 1;
}

message DeleteFeedResponse {
    Feed feed = 1;
}

enum VKBelegart {
    VK_BELEGART_UNSPECIFIED = 0;
    VK_BELEGART_AUFTRAGSBESTAETIGUNG = 1;
    VK_BELEGART_KOMMISSIONIERAUFTRAG = 2;
    VK_BELEGART_KOMMISSIONIERRECHNUNG = 3;
    VK_BELEGART_SOFORTRECHNUNG = 4;
    VK_BELEGART_RECHNUNG = 5;
    VK_BELEGART_SOFORTSTORNORECHNUNG = 6;
    VK_BELEGART_LIEFERSCHEIN = 7;
    VK_BELEGART_KOMMISSIONIERLIEFERSCHEIN = 8;
    VK_BELEGART_STORNORECHNUNG = 9;
    VK_BELEGART_GUTSCHRIFT = 10;
    VK_BELEGART_RUECKLIEFERSCHEIN = 11;
    VK_BELEGART_KOMMISSIONIERABSCHLUSSLIEFERSCHEIN = 12;
    VK_BELEGART_STRECKENLIEFERSCHEIN = 13;
    VK_BELEGART_ANGEBOT = 14;
    VK_BELEGART_STRECKENRUECKLIEFERSCHEIN = 15;
    VK_BELEGART_DIREKTRECHNUNG = 16;
    VK_BELEGART_PROFORMARECHNUNG = 17;
    VK_BELEGART_STRECKENSOFORTRECHNUNG = 18;
    VK_BELEGART_FILIAL_LIEFERSCHEIN = 19;
    VK_BELEGART_STRECKENSOFORTSTORNORECHNUNG = 20;
    VK_BELEGART_SOFORTAUFTRAG = 21;
    VK_BELEGART_FILIAL_AUFTRAGSBESTAETIGUNG = 22;
    VK_BELEGART_SAMMELRECHNUNG = 23;
    VK_BELEGART_MUSTERBELEG = 24;
}

enum TimeFramePreset {
    TIME_FRAME_PRESET_TODAY_UNSPECIFIED = 0;
    TIME_FRAME_PRESET_YESTERDAY = 1;
    TIME_FRAME_PRESET_THIS_MONTH = 2;
    TIME_FRAME_PRESET_LAST_MONTH = 3;
    TIME_FRAME_PRESET_LAST_7_DAYS = 4;
    TIME_FRAME_PRESET_LAST_14_DAYS = 5;
    TIME_FRAME_PRESET_LAST_30_DAYS = 6;
    TIME_FRAME_PRESET_LAST_90_DAYS = 7;
    TIME_FRAME_PRESET_LAST_365_DAYS = 8;
    TIME_FRAME_PRESET_THIS_YEAR = 9;
    TIME_FRAME_PRESET_TODAY_AND_YESTERDAY = 10;
}

message BatchEmitVKBelegEventsRequest {
    int32 mandant = 1;
    repeated int64 bel_ids = 2;
}

message BatchEmitVKBelegEventsResponse {
    int64 success_total = 1;
    repeated string bel_ids_with_error = 2;
}

message TimeRange {
    string start_at = 1; // ISO 8601 format
    string end_at = 2; // ISO 8601 format
}

message ListVKBelegSalechannelsRequest {
    int32 page = 1;
    int32 page_size = 2;
    int32 mandant = 3;
    string search = 4;
    bool debug = 5;
}

message SalechannelItem {
    int32 mandant = 1;
    string code = 2;
    string name = 3;
}

message ListVKBelegSalechannelsResponse {
    int32 page = 1;
    int32 page_size = 2;
    repeated SalechannelItem items = 3;
    repeated string queries = 4;
}

message ListVKBelegPositionsPulseRequest {
    oneof time_frame {
        TimeRange range = 1;
        google.protobuf.Duration duration = 2;
        TimeFramePreset range_shortcut = 3;
    }
    int32 page_size = 4;
    int32 page = 5;
    int32 mandant = 6;
    repeated VKBelegart belegart_items = 7;
    string kundengruppe = 8;
    string supplier = 9;
    string artikelnummer = 10;
    string versandklasse = 11;
    string search = 12;
    bool fraud = 13;
    bool debug = 14;
    string query = 15;
}

message VKBelegProductPulseItem {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    string sku = 4;
    string bezeichnung = 5;
    string variante = 6;
    string supplier = 7;
    string versandklasse = 8; 
    int32 bestellungen = 9;
    double menge = 10;
    double mittlerer_ek = 11; 
    double umsatz = 12;
    double roherloes = 13;
}

message ListVKBelegPositionsPulseResponse {
    int32 page_size = 1;
    int32 page = 2;
    repeated VKBelegProductPulseItem items = 3;
    repeated string queries = 4;
}

message GetVKBelegPulseRequest {
    int32 mandant = 1;
    oneof time_frame {
        TimeRange range = 2;
        google.protobuf.Duration duration = 3;
        TimeFramePreset range_shortcut = 4;
    }
    repeated VKBelegart belegart_items = 5;
    string query = 6;
    bool debug = 7;
}

message VKBelegPulseV1 {
    int32 mandant = 1;
    string kundengruppe = 2;
    string kundengruppe_name = 3;
    int32 orders = 4;
    double turnover = 5;
    double product_qty = 6;
    double product_turnover = 7;
    double product_profit = 8;

    message Metrics {
        int32 orders = 1;
        double turnover = 2;
        double product_qty = 3;
        double product_turnover = 4;
        double product_profit = 5;
    }

    message Filters {
        int32 mandant = 1;
        TimeRange range = 2;
        repeated string belegart_items = 3;
    }
}

message GetVKBelegPulseResponse {
    int32 page_size = 1;
    int32 page = 2;
    int32 mandant = 3;
    repeated VKBelegPulseV1 items = 4;
    VKBelegPulseV1.Metrics metrics = 5;
    VKBelegPulseV1.Filters filters = 6;
    repeated string queries = 7;
}

message FetchNewestVKBelegEventsRequest {
    int32 mandant = 1;
    int64 bel_id = 2;
}

message FetchNewestVKBelegEventsResponse {
    repeated int64 bel_ids = 1;
}

message EmitVKBelegEventsRequest {
    int32 mandant = 3;
    int64 bel_id = 4;
}

message EmitVKBelegEventsResponse {
    repeated EventItemVkBeleg events = 1;
}

enum EventTopic {
    EVENT_TOPIC_UNKNOW_UNSPECIFIED = 0;
    EVENT_TOPIC_VK_BELEG_CREATED = 1;
    EVENT_TOPIC_VK_BELEG_PAYED = 2;
    EVENT_TOPIC_VK_BELEG_OVER_PAYED = 3;
    EVENT_TOPIC_VK_BELEG_UNDER_PAYED = 4;
    EVENT_TOPIC_VK_BELEG_MAHNSTUFE_1 = 5;
    // EVENT_VK_BELEG_TOPIC_MAHNSTUFE_2 = 6;
    // EVENT_VK_BELEG_TOPIC_MAHNSTUFE_3 = 7;
    EVENT_TOPIC_VK_BELEG_CANCELD = 8;
    EVENT_TOPIC_VK_BELEG_FULFILLED = 9;
    EVENT_TOPIC_FEED_FILE_CREATED = 10;
}

message EventItemVkBeleg {
    string id = 1;
    EventTopic topic = 2;
    int32 mandant = 3;
    int64 bel_id = 4;
    repeated string tags = 5;
    repeated string processed_tags = 6;
    google.protobuf.Timestamp created_at = 7;
    oneof event {
        EventVkBelegCreated created = 8;
        EventVkBelegPayed payed = 9;
        EventVkBelegOverPayed over_payed = 10;
        EventVkBelegUnderPayed under_payed = 11;
        EventVkBelegMahnstufe1 mahnstufe_1 = 12;
        // EventVkBelegMahnstufe1 mahnstufe_2 = 13;
        // EventVkBelegMahnstufe1 mahnstufe_3 = 14;
        EventVkBelegCanceled canceled = 15;
    }
}

message ListVKBelegEventsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_RESSOURCE = 1;
        FIELD_REFERENCE = 2;
        FIELD_TAGS = 3;
        FIELD_PROCESSED_TAGS = 4;
        FIELD_CREATED_AT = 5;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListVKBelegEventsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListVKBelegEventsFilter filters = 6;
}

message ListVKBelegEventsResponse {
    repeated EventItemVkBeleg events = 1;
    string page_token = 2;
}

message GetVKBelegEventRequest {
    int32 mandant = 1;
    int64 bel_id = 2;
    EventTopic topic = 3;
}

// EVENT_VK_BELEG_TOPIC_CREATED
message EventVkBelegCreated {
    EventTopic topic = 1;
    VKBelegV2 beleg = 2;
    repeated VKBelegePositionenV2 positions = 3;
    repeated VKBelegeWarehousePositionV1 warehouse_positions = 4;
    google.protobuf.Timestamp beleg_created_at = 5;
    google.protobuf.Timestamp created_at = 6;
}

// EVENT_VK_BELEG_TOPIC_PAYED
message EventVkBelegPayed {
    EventTopic topic = 1;
    int32 mandant = 2;
    int64 bel_id = 3;
    int64 vor_id = 4;
    string belegart = 5;
    string kundengruppe = 6;
    string referenznummer = 7;
    string zahlungskond = 8;
    string user_zahlungsreferenz = 9;
    google.protobuf.Timestamp created_at = 10;
}

// EVENT_VK_BELEG_TOPIC_OVER_PAYED
message EventVkBelegOverPayed {
    EventTopic topic = 1;
    int32 mandant = 2;
    int64 bel_id = 3;
    int64 vor_id = 4;
    string belegart = 5;
    string kundengruppe = 6;
    string referenznummer = 7;
    string zahlungskond = 8;
    string user_zahlungsreferenz = 9;
    google.protobuf.Timestamp created_at = 10;
}

// EVENT_VK_BELEG_TOPIC_UNDER_PAYED
message EventVkBelegUnderPayed {
    EventTopic topic = 1;
    int32 mandant = 2;
    int64 bel_id = 3;
    int64 vor_id = 4;
    string belegart = 5;
    string kundengruppe = 6;
    string referenznummer = 7;
    string zahlungskond = 8;
    string user_zahlungsreferenz = 9;
    google.protobuf.Timestamp created_at = 10;
}

// EVENT_VK_BELEG_MAHNSTUFE_1
message EventVkBelegMahnstufe1 {
    EventTopic topic = 1;
    int32 mandant = 2;
    int64 bel_id = 3;
    int64 vor_id = 4;
    string belegart = 5;
    string kundengruppe = 6;
    string referenznummer = 7;
    string zahlungskond = 8;
    string user_zahlungsreferenz = 9;
    google.protobuf.Timestamp created_at = 10;
}

// EVENT_TOPIC_VK_BELEG_CANCELD
message EventVkBelegCanceled {
    EventTopic topic = 1;
    int32 mandant = 2;
    int64 bel_id = 3;
    int64 vor_id = 4;
    string belegart = 5;
    string kundengruppe = 6;
    string referenznummer = 7;
    string zahlungskond = 8;
    string user_zahlungsreferenz = 9;
    string user_kopftext = 10;
    repeated string user_tags = 11;
    google.protobuf.Timestamp created_at = 12;
}

// EVENT_TOPIC_FEED_FILE_CREATED
message EventFeedFileCreated {
    EventTopic topic = 1;
    string feed = 2;
    string supplier = 3;
    string name = 4;
    string uri = 5;
    int64 size = 6;
    string size_humanized = 7;
    google.protobuf.Timestamp created_at = 8;
}

message GetVKBelegEventResponse {
    oneof event {
        EventVkBelegCreated created = 1;
        EventVkBelegPayed payed = 2;
        EventVkBelegOverPayed over_payed = 3;
        EventVkBelegUnderPayed under_payed = 4;
        EventVkBelegMahnstufe1 mahnstufe_1 = 5;
        // EventVkBelegMahnstufe1 mahnstufe_2 = 6;
        // EventVkBelegMahnstufe1 mahnstufe_3 = 7;
        EventVkBelegCanceled canceled = 8;
    }
}

message PushEventRequest {
    string id = 1;
}

message PushEventResponse {
    Event event = 1;
}

message GetEventRequest {
    string id = 1;
}

message GetEventResponse {
    Event event = 1;
}

message DeleteEventRequest {
    string id = 1;
}

message DeleteEventResponse {
    Event event = 1;
}

enum PayedStatus {
    PAYED_STATUS_UNKNOW_UNSPECIFIED = 0;
    PAYED_STATUS_NOT_PAID = 1;
    PAYED_STATUS_PAID = 2;
    PAYED_STATUS_UNDERPAID = 3;
    PAYED_STATUS_OVERPAID = 4;
}

enum MahnstufeStatus {
    MAHNSTUFE_STATUS_UNKNOW_UNSPECIFIED = 0;
    MAHNSTUFE_STATUS_0 = 1;
    MAHNSTUFE_STATUS_1 = 2;
    MAHNSTUFE_STATUS_2 = 3;
    MAHNSTUFE_STATUS_3 = 4;
}

message VKBelegV2 {
    int32 mandant = 1;
    int64 vor_id = 2;
    int64 bel_id = 3;
    string belegkennzeichen = 4;
    string belegart = 5;
    string kundengruppe = 6;
    string kopftext = 7;
    string referenznummer = 8;
    string lieferbedingung = 9;
    string user_kom_bearbeiter = 10;
    google.protobuf.Timestamp user_kom_zeit = 11;
    string user_zahlungsreferenz = 12;
    google.protobuf.Timestamp user_cd = 13;
    string user_belegjahr_belegnummer = 14;
    double nettobetrag_ew = 15;
    double bruttobetrag_ew = 16;
    string versand = 17;
    PayedStatus user_bezahlt = 18;
    string zahlungskond = 19;
    string inkassoart = 20;
    double betrag = 21;
    string email = 22;
    string telefon = 23;
    string a0_land = 24;
    string a1_land = 25;
    string memo = 26;
    repeated string tags = 27;
    MahnstufeStatus user_mahnstufe = 28;
    double roherloes = 29;
    repeated string suppliers = 30;
    string wkz = 31;
}

message VKBelegePositionenV2 {
    int64 bel_pos_id = 1;
    int64 vor_pos_id = 2;
    string position = 3;
    string artikelnummer = 4;
    int32 auspraegung_id = 5;
    string bezeichnung_1 = 6;
    string bezeichnung_2 = 7;
    double gesamtpreis_intern_ew = 8;
    double einzelpreis = 9;
    double mittlerer_ek = 10;
    double roherloes = 11;
    double menge = 12;
    bool ist_erledigt = 13;
    string mengeneinheit = 14;
    string menge_vp_einheit = 15;
    bool user_sonepar_bestellt = 16;
    google.protobuf.Timestamp user_sonepar_bestellt_markiert_datum = 17;
    bool user_ep_bestellt = 18;
    google.protobuf.Timestamp user_ep_bestellt_markiert_datum = 19;
    string user_versandklasse = 20;
    string user_sonepar_artikel = 21;
    string user_zulieferer_code = 22;
    string user_zulieferer_artikelnummer = 23;
    double user_zulieferer_bestand = 24;
    string artikelgruppe = 25;
}

message VKBelegeWarehousePositionV1 {
    int32 mandant = 1;
    string artikelnummer = 2;
    int32 auspraegung_id = 3;
    double menge = 4;
    string mengeneinheit = 5;
    string menge_vp_einheit = 6;
    double menge_vp_umrechnung = 7;
    double lagerbestand = 8;
    double dispobestand = 9;
}

message GetVKBelegV2Request {
    int32 mandant = 1;
    int64 bel_id = 2;
}

message GetVKBelegV2Response {
    VKBelegV2 beleg = 1;
    repeated VKBelegePositionenV2 positions = 2;
    repeated VKBelegeWarehousePositionV1 warehouse_positions = 3;
}

message GetApiKeyRequest {
    string id = 1;
}

message GetApiKeyResponse {
    ApiKey api_key = 1;
}

message ListApiKeysFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_USERNAME = 1;
        FIELD_EMAIL = 2;
        FIELD_SECRET = 3;
        FIELD_BY_USER_NAME = 4;
        FIELD_CREATED_AT = 5;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListApiKeysRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListApiKeysFilter filters = 6;
}

message ListApiKeysResponse {
    repeated ApiKey api_keys = 1;
    string page_token = 2;
}

message CreateApiKeyRequest {
    string username = 1;
    string email = 2;
    repeated Scope scopes = 3;
}

message CreateApiKeyResponse {
    ApiKey api_key = 1;
}

message DeleteApiKeyRequest {
    string id = 1;
}

message DeleteApiKeyResponse {
    ApiKey api_key = 1;
}

message UpdateScopesByApiKeyRequest {
    string id = 1;
    repeated string scopes = 2;
}

message UpdateScopesByApiKeyResponse {
    ApiKey api_key = 1;
}

message UpdateAmazonItemLeadTimeToShipItem {
    int32 mandant = 1;
    int64 item_id = 2;
    int32 lead_time_to_ship = 3;
}

message UpdateAmazonLeadTimesRequest {
    repeated UpdateAmazonItemLeadTimeToShipItem items = 1;
    bool debug = 2;
}

message UpdateAmazonLeadTimesResponse {
    bool is_success = 1;
    repeated string queries = 2;
}

message GetAmazonItemRequest {
    int32 mandant = 1;
    int64 item_id = 2;
}

message GetAmazonItemResponse {
    LBAmazonItem item = 1;
}

message GetActionRequest {
    string id = 1;
}

message GetActionResponse {
    Action action = 1;
}

message ListActionsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_TYPE = 1;
        FIELD_TABLE = 2;
        FIELD_BY_USER_ID = 3;
        FIELD_BY_USER_NAME = 4;
        FIELD_CREATED_AT = 5;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListActionsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListActionsFilter filters = 6;
}

message ListActionsResponse {
    repeated Action actions = 1;
    string page_token = 2;
}

message InfoRequest {}

message InfoResponse {
    string version = 1;
}