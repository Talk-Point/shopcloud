// ContentHub API
// To access the erp

syntax = "proto3";

package proto.shopcloud.contenthub.v1;

import "google/protobuf/timestamp.proto";

// Generic
enum Operator {
    OPERATOR_EQUAL_UNSPECIFIED = 0;
    // OPERATOR_NOT_EQUAL = 1;
    OPERATOR_GREATER_THAN = 2;
    OPERATOR_GREATER_THAN_OR_EQUAL = 3;
    OPERATOR_LESS_THAN = 4;
    OPERATOR_LESS_THAN_OR_EQUAL = 5;
    // OPERATOR_IN = 6;
    // OPERATOR_NOT_IN = 7;
    // OPERATOR_LIKE = 8;
    // OPERATOR_NOT_LIKE = 9;
    // OPERATOR_IS_NULL = 10;
    // OPERATOR_IS_NOT_NULL = 11;
    OPERATOR_CONTAINS = 12;
    OPERATOR_ARRAY_CONTAINS = 13;
}

enum Direction {
    DIRECTION_ASC_UNSPECIFIED = 0;
    DIRECTION_DESC = 1;
}

// Scopes
enum Scope {
    SCOPE_UNSPECIFIED = 0;
    SCOPE_READ = 1;
    SCOPE_WRITE = 2;
    SCOPE_ADMIN = 3;
}

// Models
message ApiKey {
    string id = 1;
    string username = 2;
    string email = 3;
    repeated Scope scopes = 4;
    string secret = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

message Attribute {
    string id = 1;
    repeated string keys = 2;
    string group = 3;
    string group_value = 4;
    string value = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

message AttributeFlat {
    string id = 1;
    string key = 2;
    string group = 3;
    string group_value = 4;
    string language = 5;
    string value = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

message Log {
    enum Action {
        ACTION_UNSPECIFIED = 0;
        ACTION_CREATE = 1;
        ACTION_UPDATE = 2;
        ACTION_DELETE = 3;
    }

    string id = 1;
    string for = 2;
    string reference = 3;
    Action action = 4;
    string by_user = 5;
    map<string, string> payload = 6;
    google.protobuf.Timestamp ttl = 7;
    google.protobuf.Timestamp created_at = 8;
}

message Tag {
    enum Relevance {
        RELEVANCE_UNSPECIFIED = 0;
        RELEVANCE_LOW = 1;
        RELEVANCE_MEDIUM = 2;
        RELEVANCE_HIGH = 3;
        RELEVANCE_STATUS = 4;
    }
    enum Color {
        COLOR_UNSPECIFIED = 0;
        COLOR_YELLOW = 1;
        COLOR_RED = 2;
        COLOR_GREEN = 3;
        COLOR_BLUE = 4;
    }
    enum Status {
        STATUS_UNSPECIFIED = 0;
        STATUS_FILTERED = 1;
        STATUS_SUCCESS = 2;
        STATUS_FAILED = 3;
        STATUS_OFFLINE_REQUIRED_MISSING = 4;
    }

    string id = 1;
    string type = 2;
    string name = 3;
    string reference = 4;
    string created_by = 5;
    Relevance relevance = 6;
    Color color = 7;
    repeated string search_keys = 8;
    string memo = 9;
    string src = 10;
    google.protobuf.Timestamp created_at = 11;
    google.protobuf.Timestamp updated_at = 12;
    Status status = 13;
}

message TagFlat {
    string id = 1;
    string type = 2;
    string name = 3;
    string reference = 4;
    string created_by = 5;
    Tag.Relevance relevance = 6;
    Tag.Color color = 7;
    string memo = 8;
    string src = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
    Tag.Status status = 12;
}

message Check {
    enum Group {
        GROUP_UNSPECIFIED = 0;
        GROUP_ARTICLE = 1;
    }

    enum Type {
        TYPE_UNSPECIFIED = 0;
        TYPE_ARTICLE_EU_ENERGY_V1 = 1;
        TYPE_ARTICLE_IMAGE_EXISTS = 2;
    }

    string id = 1;
    string code = 2;
    string name = 3;
    Group group = 4;
    Type type = 5;
    bool is_active = 6;
    string description = 7;
    google.protobuf.Timestamp created_at = 8;
    google.protobuf.Timestamp updated_at = 9;
}

service ContentHubService {
    // Info
    rpc Info(InfoRequest) returns (InfoResponse);

    // APIKeys
    rpc GetApiKey(GetApiKeyRequest) returns (GetApiKeyResponse);
    rpc ListApiKeys(ListApiKeysRequest) returns (ListApiKeysResponse);
    rpc CreateApiKey(CreateApiKeyRequest) returns (CreateApiKeyResponse);
    rpc DeleteApiKey(DeleteApiKeyRequest) returns (DeleteApiKeyResponse);
    rpc UpdateScopesByApiKey(UpdateScopesByApiKeyRequest) returns (UpdateScopesByApiKeyResponse);

    // AttributeGroup
    rpc GetAttributeGroup(GetAttributeGroupRequest) returns (GetAttributeGroupResponse);
    rpc ListAttributeGroups(ListAttributeGroupsRequest) returns (ListAttributeGroupsResponse);
    rpc CreateAttributeGroup(CreateAttributeGroupRequest) returns (CreateAttributeGroupResponse);
    rpc DeleteAttributeGroup(DeleteAttributeGroupRequest) returns (DeleteAttributeGroupResponse);
    // Attribute
    rpc GetAttribute(GetAttributeRequest) returns (GetAttributeResponse);
    rpc ListAttributes(ListAttributesRequest) returns (ListAttributesResponse);
    rpc CreateAttribute(CreateAttributeRequest) returns (CreateAttributeResponse);
    rpc DeleteAttribute(DeleteAttributeRequest) returns (DeleteAttributeResponse);
    rpc UpdateAttributeValue(UpdateAttributeValueRequest) returns (UpdateAttributeValueResponse);
    rpc ExportAttributeToDb(ExportAttributeToDbRequest) returns (ExportAttributeToDbResponse);
    
    // Content Section
    rpc RenderContentSection(RenderContentSectionRequest) returns (RenderContentSectionResponse);

    // Icecat
    rpc GetIcecatProductXml(GetIcecatProductXmlRequest) returns (GetIcecatProductXmlResponse);
    rpc GetIcecatProductDataV2(GetIcecatProductDataV2Request) returns (GetIcecatProductDataV2Response);
    rpc ListIcecatProductDocuments(ListIcecatProductDocumentsRequest) returns (ListIcecatProductDocumentsResponse);
    rpc GetIcecatDocument(GetIcecatDocumentRequest) returns (GetIcecatDocumentResponse);
    rpc BatchImportIcecatDocuments(BatchImportIcecatDocumentsRequest) returns (BatchImportIcecatDocumentsResponse);
    rpc ImportIcecatDocument(ImportIcecatDocumentRequest) returns (ImportIcecatDocumentResponse);
    rpc ImportIcecatEnergyData(ImportIcecatEnergyDataRequest) returns (ImportIcecatEnergyDataResponse);

    // Tags
    rpc GetTag(GetTagRequest) returns (GetTagResponse);
    rpc ListTags(ListTagsRequest) returns (ListTagsResponse);
    rpc CreateTag(CreateTagRequest) returns (CreateTagResponse);
    rpc BatchCreateTags(BatchCreateTagsRequest) returns (BatchCreateTagsResponse);
    rpc DeleteTag(DeleteTagRequest) returns (DeleteTagResponse);
    rpc DeleteTagByReference(DeleteTagByReferenceRequest) returns (DeleteTagByReferenceResponse);
    rpc ExportTagToDb(ExportTagToDbRequest) returns (ExportTagToDbResponse);
    rpc SetTagStatus(SetTagStatusRequest) returns (SetTagStatusResponse);

    // Logs
    rpc GetLog(GetLogRequest) returns (GetLogResponse);
    rpc ListLogs(ListLogsRequest) returns (ListLogsResponse);
    rpc DeleteLog(DeleteLogRequest) returns (DeleteLogResponse);

    // Checks
    rpc GetCheck(GetCheckRequest) returns (GetCheckResponse);
    rpc ListChecks(ListChecksRequest) returns (ListChecksResponse);
    rpc CreateCheck(CreateCheckRequest) returns (CreateCheckResponse);
    rpc DeleteCheck(DeleteCheckRequest) returns (DeleteCheckResponse);
    rpc RunCheck(RunCheckRequest) returns (RunCheckResponse);

    // Events
    rpc EventHubFire(EventHubFireRequest) returns (EventHubFireResponse);

    // Categorisation
    rpc CategorizeV1(CategorizeV1Request) returns (CategorizeV1Response);

    // Misc
    rpc ConvertHtmlToMarkdown(ConvertHtmlToMarkdownRequest) returns (ConvertHtmlToMarkdownResponse);
    rpc ConvertMarkdownToHtml(ConvertMarkdownToHtmlRequest) returns (ConvertMarkdownToHtmlResponse);
}

message ConvertHtmlToMarkdownRequest {
    string content = 1;
}

message ConvertHtmlToMarkdownResponse {
    string content = 1;
}

message ConvertMarkdownToHtmlRequest {
    string content = 1;
}

message ConvertMarkdownToHtmlResponse {
    string content = 1;
}

message GetCheckRequest {
    string id = 1;
}

message GetCheckResponse {
    Check check = 1;
}

message ListChecksFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_NAME = 1;
        FIELD_GROUP = 2;
        FIELD_TYPE = 3;
        FIELD_IS_ACTIVE = 4;
        FIELD_CREATED_AT = 5;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListChecksRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListChecksFilter filters = 6;
}

message ListChecksResponse {
    repeated Check checks = 1;
    string page_token = 2;
}

message CreateCheckRequest {
    string code = 1;
    string name = 2;
    Check.Type type = 3;
    bool is_active = 4;
    string description = 5;
}

message CreateCheckResponse {
    Check check = 1;
}

message DeleteCheckRequest {
    string id = 1;
}

message DeleteCheckResponse {
    Check check = 1;
}

message RunCheckRequest {
    string id = 1;
    string reference = 2;
}

message RunCheckResponse {
    Tag tag = 1;
}

message SetTagStatusRequest {
    string id = 1;
    Tag.Status status = 2;
    string memo = 3;
}

message SetTagStatusResponse {
    Tag tag = 1;
}

message CategorizeV1Request {
    string title = 1;
    bool not_use_cache = 2;
    bool debug = 3;
}

message CategorizeV1Response {
    bool is_success = 1;
    string main_category = 2;
    string category = 3;
    string product_type = 4;
    string prompt = 5;
    string raw_result = 6;
}

message AttributeCreatedEvent {
    string topic = 1;
    string id = 2;
    google.protobuf.Timestamp created_at = 3;
    string group = 4;
    string group_value = 5;
    repeated string keys = 6;
    string value = 7;
}

message AttributeDeletedEvent {
    string topic = 1;
    string id = 2;
    google.protobuf.Timestamp created_at = 3;
    string group = 4;
    string group_value = 5;
    repeated string keys = 6;
    string value = 7;
}

message TagCreatedEvent {
    string topic = 1;
    string id = 2;
    google.protobuf.Timestamp created_at = 3;
    string type = 4;
    string name = 5;
    string reference = 6;
    string created_by = 7;
    Tag.Relevance relevance = 8;
    Tag.Status status = 9;
}

message TagDeletedEvent {
    string topic = 1;
    string id = 2;
    google.protobuf.Timestamp created_at = 3;
    string type = 4;
    string name = 5;
    string reference = 6;
    Tag.Status status = 7;
}

message TagUpdatedEvent {
    string topic = 1;
    string id = 2;
    google.protobuf.Timestamp created_at = 3;
    google.protobuf.Timestamp updated_at = 4;
    string type = 5;
    string name = 6;
    string reference = 7;
    string created_by = 8;
    Tag.Relevance relevance = 9;
    Tag.Status status = 10;
}

message EventHubFireRequest {
    string topic = 1;
    string payload = 2;
}

message EventHubFireResponse {
    string id = 1;   
}

message GetLogRequest {
    string id = 1;
}

message GetLogResponse {
    Log log = 1;
}

message ListLogsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_FOR = 1;
        FIELD_ACTION = 2;
        FIELD_BY_USER = 3;
        FIELD_CREATED_AT = 4;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListLogsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListLogsFilter filters = 6;
}

message ListLogsResponse {
    repeated Log logs = 1;
    string page_token = 2;
}

message DeleteLogRequest {
    string id = 1;
}

message DeleteLogResponse {
    Log log = 1;
}

message ExportTagToDbRequest {
    string id = 1;
}

message ExportTagToDbResponse {
    repeated TagFlat tags = 1;
}

message DeleteTagByReferenceRequest {
    string type = 1;
    string name = 2;
    string reference = 3;
}

message DeleteTagByReferenceResponse {
    Tag tag = 1;
}

message BatchCreateTagsRequest {
    repeated CreateTagRequest tags = 1;
}

message TagStatusCreated {
    string id = 1;
}

message TagStatusExists {
    string type = 1;
    string name = 2;
    string reference = 3;
}

message TagStatusFailure {
    string type = 1;
    string name = 2;
    string reference = 3;
    string message = 4;
}

message TagCreateInfo {
    oneof status {
        TagStatusCreated created = 1;
        TagStatusExists exists = 2;
        TagStatusFailure failure = 3;
    }
}

message BatchCreateTagsResponse {
    repeated TagCreateInfo tags = 1;
}

message GetTagRequest {
    string id = 1;
}

message GetTagResponse {
    Tag tag = 1;
}

message ListTagsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_TYPE = 1;
        FIELD_NAME = 2;
        FIELD_REFERENCE = 3;
        FIELD_RELEVANCE = 4;
        FIELD_SEARCH_KEYS = 5;
        FIELD_CREATED_BY = 6;
        FIELD_CREATED_AT = 7;
        FIELD_STATUS = 8;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListTagsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
        ORDER_BY_RELEVANCE = 2;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListTagsFilter filters = 6;
}

message ListTagsResponse {
    repeated Tag tags = 1;
    string page_token = 2;
}

message CreateTagRequest {
    string type = 1;
    string name = 2;
    string reference = 3;
    string created_by = 4;
    Tag.Relevance relevance = 5;
    Tag.Color color = 6;
    repeated string search_keys = 7;
    string memo = 8;
    string src = 9;
}

message CreateTagResponse {
    Tag tag = 1;
}

message DeleteTagRequest {
    string id = 1;
}

message DeleteTagResponse {
    Tag tag = 1;
}

message IcecatProductDataV2Enery {
    string eprel = 1;
    string class = 2;
    string scala = 3;
}

message IcecatProductDataV2AttributeItem {
    string name = 1;
    string value = 2;
}

message IcecatProductDataV2AttributeGroup {
    string name = 1;
    repeated IcecatProductDataV2AttributeItem items = 2;
}

message IcecatProductDataV2 {
    string name = 1;
    string brand = 2;
    string description = 3;
    string category = 4;
    string gtin = 5;
    string serie = 6;
    string basename = 7;
    IcecatProductDataV2Enery energy = 8;
    string release_date = 9;
    string end_of_life_date = 10;
    repeated IcecatProductDataV2AttributeGroup attributes = 11;
    repeated string images = 12;
}

message GetIcecatProductDataV2Request {
    string gtin = 1;
    string language = 2;
}

message GetIcecatProductDataV2Response {
    IcecatProductDataV2 data = 1;
}

message ImportIcecatEnergyDataRequest {
    string gtin = 1;
    string language = 2;
}

message ImportIcecatEnergyDataResponse {
    repeated Attribute attributes = 1;
}

enum ContentSectionType {
    CONTENT_SECTION_TYPE_UNSPECIFIED = 0;
    CONTENT_SECTION_TYPE_DOCUMENTS_V1 = 1;
    CONTENT_SECTION_TYPE_EU_ENERGIE_LABEL_V1 = 2;
}

message RenderContentSectionRequest {
    ContentSectionType section = 1;
    string gtin = 2;
    string language = 3;
}

message RenderContentSectionResponse {
    string content = 1;
    string cache_path = 2;
}

message ImportIcecatDocumentRequest {
    string gtin = 1;
    string language = 2;
    IcecatDocument document = 3;
}

message ImportIcecatDocumentResponse {
    Attribute attribute = 1;
}

message BatchImportIcecatDocumentsRequest {
    string gtin = 1;
    string language = 2;
}

message BatchImportIcecatDocumentsResponse {
    repeated Attribute attributes = 1;
}

message ExportAttributeToDbRequest {
    string id = 1;
}

message ExportAttributeToDbResponse {
    repeated AttributeFlat attributes = 1;
}

message UpdateAttributeValueRequest {
    string id = 1;
    oneof value {
        string content = 2;
        Document document = 3;
    }
}

message UpdateAttributeValueResponse {
    Attribute attribute = 1;
}

message ListAttributeGroupsFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_GROUP = 1;
        FIELD_NAME = 2;
        FIELD_TAGS = 3;
        FIELD_CREATED_AT = 4;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListAttributeGroupsRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListAttributeGroupsFilter filters = 6;
}

message ListAttributeGroupsResponse {
    repeated AttributeGroup groups = 1;
    string page_token = 2;
}

message GetAttributeGroupRequest {
    string id = 1;
}

message GetAttributeGroupResponse {
    AttributeGroup attribute_group = 1;
}

message AttributeGroup {
    string id = 1;
    string group = 2;
    string name = 3;
    repeated string allowed_values = 4;
    repeated string example_values = 5;
    int32 relevance = 6;
    repeated string tags = 7;
    google.protobuf.Timestamp created_at = 8;
    google.protobuf.Timestamp updated_at = 9;
}

message CreateAttributeGroupRequest {
    string group = 1;
    string name = 2;
    repeated string allowed_values = 3;
    repeated string example_values = 4;
    int32 relevance = 5;
}

message CreateAttributeGroupResponse {
    AttributeGroup attribute_group = 1;
}

message DeleteAttributeGroupRequest {
    string id = 1;
}

message DeleteAttributeGroupResponse {
    AttributeGroup attribute_group = 1;
    repeated Attribute attributes_success = 2;
    repeated string attributes_failed = 3;
}

message GetIcecatDocumentRequest {
    string src = 1;
}

message GetIcecatDocumentResponse {
    string name = 1;
    string type = 2;
    bytes content = 3;
}

message IcecatDocument {
    string name = 1;
    string type = 2;
    string src = 3;
}

message ListIcecatProductDocumentsRequest {
    string gtin = 1;
    string language = 2;
}

message ListIcecatProductDocumentsResponse {
    repeated IcecatDocument documents = 1;
}

message GetIcecatProductXmlRequest {
    string gtin = 1;
    string language = 2;
    bool not_use_cache = 3;
}

message GetIcecatProductXmlResponse {
    string content = 1;
}

message GetAttributeRequest {
    string id = 1;
}

message GetAttributeResponse {
    Attribute attribute = 1;
}

message Document {
    bytes content = 1;
    string name = 2;
}

message CreateAttributeRequest {
    string group = 1;
    repeated string keys = 2;
    repeated string languages = 4;
    oneof value {
        string content = 5;
        Document document = 6;
    }
}

message CreateAttributeResponse {
    Attribute attribute = 1;
}

message ListAttributesFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_KEYS = 1;
        FIELD_GROUP = 2;
        FIELD_CREATED_AT = 3;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListAttributesRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListAttributesFilter filters = 6;
}

message ListAttributesResponse {
    repeated Attribute attributes = 1;
    string page_token = 2;
}

message DeleteAttributeRequest {
    string id = 1;
}

message DeleteAttributeResponse {
    Attribute attribute = 1;
}

message GetApiKeyRequest {
    string id = 1;
}

message GetApiKeyResponse {
    ApiKey api_key = 1;
}

message ListApiKeysFilter {
    enum Field {
        FIELD_ID_UNSPECIFIED = 0;
        FIELD_USERNAME = 1;
        FIELD_EMAIL = 2;
        FIELD_SECRET = 3;
        FIELD_BY_USER_NAME = 4;
        FIELD_CREATED_AT = 5;
    }

    Field field = 1;
    string value = 2;
    Operator operator = 3;
}

message ListApiKeysRequest {
    enum OrderBy {
        ORDER_BY_ID_UNSPECIFIED = 0;
        ORDER_BY_CREATED_AT = 1;
    }

    int32 page_size = 1;
    string page_next = 2;
    string page_previous = 3;
    OrderBy order_by = 4;
    Direction direction = 5;
    repeated ListApiKeysFilter filters = 6;
}

message ListApiKeysResponse {
    repeated ApiKey api_keys = 1;
    string page_token = 2;
}

message CreateApiKeyRequest {
    string username = 1;
    string email = 2;
    repeated Scope scopes = 3;
}

message CreateApiKeyResponse {
    ApiKey api_key = 1;
}

message DeleteApiKeyRequest {
    string id = 1;
}

message DeleteApiKeyResponse {
    ApiKey api_key = 1;
}

message UpdateScopesByApiKeyRequest {
    string id = 1;
    repeated string scopes = 2;
}

message UpdateScopesByApiKeyResponse {
    ApiKey api_key = 1;
}

message InfoRequest {}

message InfoResponse {
    string version = 1;
}